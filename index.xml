<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debashish Sahu</title>
    <link>https://debsahu.github.io/</link>
    <description>Recent content on Debashish Sahu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Mar 2018 00:00:00 -0500</lastBuildDate><atom:link href="https://debsahu.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Talking to Twitter Using TwitterWebAPI for ESP8266</title>
      <link>https://debsahu.github.io/posts/talking-to-twitter-using-twitterwebapi-for-esp8266/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 -0500</pubDate>
      
      <guid>https://debsahu.github.io/posts/talking-to-twitter-using-twitterwebapi-for-esp8266/</guid>
      <description>Idea:  Use ESP8266 to talk to Twitter Get User Data or Tweet or Search Twitter Display the data on a Dot-Matrix display  Implementation I created an Arduino library to talk to Twitter using its Web API made for ESP8266. There are other approaches like using a bearer token arduino-twitter-api, but comes with limitations in terms of not being able to send tweet. This Arduino library TwitterWebAPI can both search/read and post tweets.</description>
    </item>
    
    <item>
      <title>Internet Connected Smoke Alarm</title>
      <link>https://debsahu.github.io/posts/internet-connected-smoke-alarm/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 -0500</pubDate>
      
      <guid>https://debsahu.github.io/posts/internet-connected-smoke-alarm/</guid>
      <description>Have you wondered how to build a internet connected smoke alarm using ESP8266 and a cheap Kidde RF-SM-DC?
Overall idea is to detect smoke alarm signals and send MQTT message. Home Assistant reads the MQTT message and sends out notifications that can be used to notify your local fire station.
ESP8266 sends a MQTT message until the smoke alarm is beeping.
Software Refer to https://github.com/debsahu/ESP_External_Interrupt to build the ESP8266 part of the internet connected smoke alarm.</description>
    </item>
    
    <item>
      <title>Extreme Power-Save Mode: ESP8266 Powered ON After External Interrupt</title>
      <link>https://debsahu.github.io/posts/extreme-power-save-mode-esp8266-powered-on-after-external-interrupt/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 -0500</pubDate>
      
      <guid>https://debsahu.github.io/posts/extreme-power-save-mode-esp8266-powered-on-after-external-interrupt/</guid>
      <description>Have you ever wondered how to turn on ESP8266 using external interrupt? Build a battery powered amazon dash button or a 18650 lipo powered door bell using ESP8266 without putting the device in deep sleep? Here is your answer.
Idea  Keep ESP8266 on OFF mode as default External 3.3V signal (can be short or long) arrives and turns ON ESP8266 ESP8266 wakes up and keeps itself awake until a task is perfomed Send MQTT data to server Put ESP8266 back to power OFF state  Implementation  RST pin is always HIGH/3.</description>
    </item>
    
    <item>
      <title>Internet Connected Dog Water Bowl Sensor</title>
      <link>https://debsahu.github.io/posts/internet-connected-dog-water-bowl-sensor/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 -0500</pubDate>
      
      <guid>https://debsahu.github.io/posts/internet-connected-dog-water-bowl-sensor/</guid>
      <description>Wouldn’t it be nice to know if your dog’s water bowl is empty? Let us build a sensor that measures the water level every 5 minutes. This value is sent to MQTT server and Home Assistant automation takes care of the rest.
This sensor connects to MQTT and Home Assistant. See dogsensor.yaml for adding this to HA. Assumes that one has set up various notification sensors available in HA.</description>
    </item>
    
    <item>
      <title>MOSFET Used as Switch to Control a 12V Fan</title>
      <link>https://debsahu.github.io/posts/mosfet-used-as-switch-to-control-a-12v-fan/</link>
      <pubDate>Sun, 12 Mar 2017 00:00:00 -0500</pubDate>
      
      <guid>https://debsahu.github.io/posts/mosfet-used-as-switch-to-control-a-12v-fan/</guid>
      <description>Lets turn on and off low powered fan running at low (&amp;lt;20V) DC voltages. We shall use a MOSFET to achieve this. Hardware  IRLML0030PBF ATTiny85 2-pin 12V Fan  Wiring MOSFETs have three terminals Drain (D), Source (S) and Gate (G), where source is connected to ground and the +12V or +5V along with load (Fan) is connected to drain. The MOSFET is on when gate voltage is higher than 1.</description>
    </item>
    
    <item>
      <title>How to Build a 3.3V Voltage Regulator</title>
      <link>https://debsahu.github.io/posts/how-to-build-a-3-3v-voltage-regulator/</link>
      <pubDate>Sat, 25 Feb 2017 00:00:00 -0500</pubDate>
      
      <guid>https://debsahu.github.io/posts/how-to-build-a-3-3v-voltage-regulator/</guid>
      <description>    Here are the instructions to wire a stable AMS1117-3.3 voltage regulator properly. This can power an ESP8266 or any 3.3V micro-controller reliably supporting current draws up to 1A.
Hardware  AMS 1117-3.3 10 uF Electrolytic Capacitor 104 Ceramic Capacitor  Wiring AMS1117-3.3 (right to left)  Pin 1: GND Pin 2: Vout Pin 3: Vin  Connections  5-12V -&amp;gt; Vin GND -&amp;gt; GND 10 uF Electrolytic Capacitor +ve -&amp;gt; Vout 10 uF Electrolytic Capacitor GND -&amp;gt; GND 104 Ceramic Capacitor +ve -&amp;gt; Vin 104 Ceramic Capacitor GND -&amp;gt; GND  </description>
    </item>
    
    <item>
      <title>IoT Dot Matrix Display: Twitter Mentions Using ESP8266 Adafruit.io and IFTTT</title>
      <link>https://debsahu.github.io/posts/iot-dot-matrix-display-twitter-mentions-using-esp8266-adafruit-io-and-ifttt/</link>
      <pubDate>Fri, 17 Feb 2017 00:00:00 -0500</pubDate>
      
      <guid>https://debsahu.github.io/posts/iot-dot-matrix-display-twitter-mentions-using-esp8266-adafruit-io-and-ifttt/</guid>
      <description>Let’s say that you don’t have your smartphone around and someone mentions you on twitter. Wouldn’t it be nice to have a display that automatically reads your twitter mentions and show it on a scrolling display? So let’s build a internet controlled (IoT) dot-matrix display that does this for us using an ESP8266.
The plan to accomplish this is as follows:  Someone mentions us on twitter (in my case @debsahu) IF This Then That (IFTTT) tracks these mentions and posts this data on Adafruit.</description>
    </item>
    
    <item>
      <title>Posts</title>
      <link>https://debsahu.github.io/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://debsahu.github.io/archives/</guid>
      <description>archives</description>
    </item>
    
    <item>
      <title>Search</title>
      <link>https://debsahu.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://debsahu.github.io/search/</guid>
      <description>search</description>
    </item>
    
  </channel>
</rss>
