<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Debashish Sahu</title>
    <link>https://www.debashishsahu.com/</link>
    <description>Recent content on Debashish Sahu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 21 Nov 2021 00:00:00 -0500</lastBuildDate><atom:link href="https://www.debashishsahu.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Integrating PM 2.5 sensor (VINDRIKTNING) into Home Assistant</title>
      <link>https://www.debashishsahu.com/posts/integrating-pm-2-5-sensor-vindriktning-into-home-assistant/</link>
      <pubDate>Sun, 21 Nov 2021 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/integrating-pm-2-5-sensor-vindriktning-into-home-assistant/</guid>
      <description>ESPNow connectivity for the Ikea VINDRIKTNING Most of the code is borrored from Hypfer/esp8266-vindriktning-particle-sensor that uses an ESP8266 to read from GPIO14(RX) and send via ESPNow to a EspNow Server (check debsahu/ESPNowMQTT), which sends it out to a MQTT broker.
Hardware IKEA VINDRIKTNING ($11.99) ESP8266 ($2.00) Dupount cables ($0.50) Soldering Iron &amp;amp; solder Connections 5V on VINDRIKTNING to 5V on ESP8266 VIN GND on VINDRIKTNING to GND on ESP8266 GND REST on VINDRIKTNING to GPIO14 on ESP8266 Original idea from Home Assistant Thread GitHub: Hypfer/esp8266-vindriktning-particle-sensor ESPHome code ESPHome PM1006 Example ESPHome Config/Code ESPNow code Source: GitHub: debsahu/esp8266-vindriktning-particle-sensor</description>
    </item>
    
    <item>
      <title>Energy Monitor | Emporia Vue in Home Assistant</title>
      <link>https://www.debashishsahu.com/posts/energy-monitor-emporia-vue-in-home-assistant/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/energy-monitor-emporia-vue-in-home-assistant/</guid>
      <description> Using Emporia Vue to monitor enegry usage of whole house and several branches in the house.
Emporia Vue Home Assistant Intergration GitHub: magico13/ha-emporia-vue </description>
    </item>
    
    <item>
      <title>Rainbird Irrigation into Home Assistant &amp; Full tutorial on Winterization</title>
      <link>https://www.debashishsahu.com/posts/irrigation-ha-blowout/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/irrigation-ha-blowout/</guid>
      <description>Here I add WiFi LNK module to my ESP-TM2 Rainbird Irrigation System and add the Rainbird integration to Home Assistant. Once completed, I winterize the irrigation system for the coming winter.</description>
    </item>
    
    <item>
      <title>WIO Terminal: Catan Die Roll TinyML</title>
      <link>https://www.debashishsahu.com/posts/wio-catan-die-roll-tinyml/</link>
      <pubDate>Wed, 22 Sep 2021 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/wio-catan-die-roll-tinyml/</guid>
      <description>Machine Learning in WIO Terminal (Seeed Studio) to recognize shake and roll two die using True Random Number Generator (TRNG)
GitHub: debsahu/WIOCatanDieRoll Objective When WIO is shaken it will roll two die signifying a turn on Settlers of Catan board game Die roll needs to be completely random uniform distribution Die roll must happen when device is shook vigorously Hardware WIO Terminal (Seeed Studio) USB-C cable Software WIOImuTap: Uses in-built IMU to look for double tap to roll 2 die using TRNG EdgeImpulse: Upload and train NN using sensor data on Edge Impulse, deployed on WIO with live classification on serial port.</description>
    </item>
    
    <item>
      <title>Continuous Radon Sensing Using Airthings Wave</title>
      <link>https://www.debashishsahu.com/posts/continuous-radon-sensing-using-airthings-wave/</link>
      <pubDate>Mon, 23 Aug 2021 12:00:00 -0400</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/continuous-radon-sensing-using-airthings-wave/</guid>
      <description>Radon Radon is everywhere, see map Naturally-occurring radioactive gas - causes lung cancer Inert, colorless and odorless Naturally in the atmosphere in trace amounts Outdoors: radon disperses rapidly Most radon exposure occurs inside homes, schools and workplaces Indoors: Radon gas becomes trapped indoors after it enters buildings through cracks and other holes in the foundation Can be controlled and managed with proven, cost-effective techniques Radon monitoring Hardware Airthings Wave Continuous radon monitoring Long term monitoring LEDs color – radon level Battery Operated Bluetooth BLE ESP32 - lolin D32 (can use any ESP32) MQTT Server - Mosquitto Software Python script to read values from Airthings Wave: Wave-Reader Home Assistant Custom Component: sensor.</description>
    </item>
    
    <item>
      <title>Sending sensor data from ESP32 to InfluxDB | Local access - time-series database</title>
      <link>https://www.debashishsahu.com/posts/sending-sensor-data-from-esp32-to-influxdb-local-access-time-series-database/</link>
      <pubDate>Mon, 15 Mar 2021 10:00:00 -0400</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/sending-sensor-data-from-esp32-to-influxdb-local-access-time-series-database/</guid>
      <description>Instead of sending data to services in the cloud, here we send sensor data to local InfluxDB database. Grafana is used to read data from InfluxDB and alert thresholds are set to send reactive alerts.
InfluxDB Download and Installation: official docs
Docker Download and Installation: official docs
ESP32 connecting to WPA2-Enterprise Hardware ESP32 TTGo T-Energy SSD1306 OLED display BME280 sensor Software Dependencies Listed below are the dpendencies used by Arduino IDE, but use PlatformIO instead!</description>
    </item>
    
    <item>
      <title>Connect ESP32 to WPA2-Enterprise WiFi (eduroam: University of Michigan Wireless)</title>
      <link>https://www.debashishsahu.com/posts/connect-esp32-to-wpa2-enterprise-wifi-eduroam-university-of-michigan-wireless/</link>
      <pubDate>Tue, 12 Jan 2021 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/connect-esp32-to-wpa2-enterprise-wifi-eduroam-university-of-michigan-wireless/</guid>
      <description>Walkthrough of minimal settings for ESP32 to connect to WPA2-Enterprise WiFi at University of Michigan (eduroam)
GitHub: debsahu/Esp32_EduWiFi Minimal settings for ESP32 to connect to University of Michigan WiFi (MWireless/eduroam)
MSetup Go to MSetup
Log in using University of Michigan credentials
Select Other Device and log in again if needed
Enter Device Name, MAC Address, uniqname will already be selected, Advanced Options &amp;gt; Network Type &amp;gt; Internet Access After above settings are enterd, click on Register my device</description>
    </item>
    
    <item>
      <title>DIY Custom Holiday Gift | Wood Decor | 3D Printed Letters | Photo Hanger</title>
      <link>https://www.debashishsahu.com/posts/diy-custom-holiday-gift-wood-decor-3d-printed-letters-photo-hanger/</link>
      <pubDate>Fri, 25 Dec 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/diy-custom-holiday-gift-wood-decor-3d-printed-letters-photo-hanger/</guid>
      <description>Check out Canvasyvibes Art on the inspiration for this project.
I use a stained cedar picket fence, 3D printed letters and photo clip to create a personalized holiday gift.</description>
    </item>
    
    <item>
      <title>Blinking LEDs Using Inductive Qi Charger | No Batteries</title>
      <link>https://www.debashishsahu.com/posts/blinking-leds-using-inductive-qi-charger-no-batteries/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/blinking-leds-using-inductive-qi-charger-no-batteries/</guid>
      <description>Nothing new, trying to build something based on video on stranger parts
We build a coil with magnet wire and connect them to a LED. The LED blinks when coil is placed on Qi charger.</description>
    </item>
    
    <item>
      <title>Ultimate guide to permanent holiday lights using NeoPixels/WS2812B LEDs</title>
      <link>https://www.debashishsahu.com/posts/ultimate-guide-to-permanent-holiday-lights-using-neopixels-ws2812b-leds/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/ultimate-guide-to-permanent-holiday-lights-using-neopixels-ws2812b-leds/</guid>
      <description> Permanent holiday lights hardware and software setup using NeoPixels/WS2812B LEDs
Hardware LEDs: https://amzn.to/2Lu4m3P Aluminum Channels: https://amzn.to/2Knajio 18/2 wire: https://amzn.to/348I1zq 18/3 wire: https://amzn.to/37YNCJM Control Box: https://amzn.to/2KjfakW 5v 60A Power Supply: https://amzn.to/2KmRHiu 25ft extension cord: https://amzn.to/3840RIS Wire nuts: https://amzn.to/3oO1Vrb BME280(optional): https://amzn.to/3p15pHd PCB: https://github.com/toblum/McLighting/tree/master/documentation/pcb
Software WELD - GitHub: Aircoookie/WLED WLED User-mod for BME/P 280: </description>
    </item>
    
    <item>
      <title>Epoxy resin holiday lights/night lamp | DIY resin LED decor | WLED</title>
      <link>https://www.debashishsahu.com/posts/epoxy-resin-holiday-lights-night-lamp-diy-resin-led-decor-wled/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/epoxy-resin-holiday-lights-night-lamp-diy-resin-led-decor-wled/</guid>
      <description>Board Prep WLED Software: GitHub: Aircoookie/WLED
PCB: https://github.com/toblum/McLighting/tree/master/documentation/pcb</description>
    </item>
    
    <item>
      <title>ESP8266 based WLED NeoPixel Lights | Insomnia soldering session | Holiday lights prep</title>
      <link>https://www.debashishsahu.com/posts/esp8266-based-wled-neopixel-lightsinsomnia-soldering-session-holiday-lights-prep/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp8266-based-wled-neopixel-lightsinsomnia-soldering-session-holiday-lights-prep/</guid>
      <description>WLED Software: GitHub: Aircoookie/WLED
PCB: https://github.com/toblum/McLighting/tree/master/documentation/pcb</description>
    </item>
    
    <item>
      <title>DIY Smart Deck Lights | ESPHome | Home Assistant controlled</title>
      <link>https://www.debashishsahu.com/posts/diy-smart-deck-lights-esphome-home-assistant-controlled/</link>
      <pubDate>Mon, 30 Nov 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/diy-smart-deck-lights-esphome-home-assistant-controlled/</guid>
      <description> Building a Home Assistant controlled ESP32 based controller for deck LED lights via ESPHome.
Software: ESPHome </description>
    </item>
    
    <item>
      <title>DIY Mud Room Bench | Solid Wood &amp; Power Tools</title>
      <link>https://www.debashishsahu.com/posts/diy-mud-room-bench-solid-wood-power-tools/</link>
      <pubDate>Sun, 22 Nov 2020 23:09:09 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/diy-mud-room-bench-solid-wood-power-tools/</guid>
      <description>Building a wooden bench for our mud-room area using standard lumber 2x2, 1x3, 1x8 from big box store. Initially rendered the design in Fusion360, cut using the dimensions out of the project, using power tools and pocket screws.</description>
    </item>
    
    <item>
      <title>DIY Smart Wooden Faux Beam Pendent Lights | ESPHome | Smart Plant Lights | Home Assistant controlled</title>
      <link>https://www.debashishsahu.com/posts/diy-smart-wooden-faux-beam-pendent-lights-esphome-smart-plant-lights-home-assistant-controlled/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/diy-smart-wooden-faux-beam-pendent-lights-esphome-smart-plant-lights-home-assistant-controlled/</guid>
      <description> DIY Faux wood-beam lights mode from cedar fence pickets. Light is controlled by Sonoff Mini.
Pendent Lights: amazon
Software: ESPHome </description>
    </item>
    
    <item>
      <title>Halloween Special: ESP8266 Based Speakers w/ Motion Sensing &amp; LEDS | Pumpkin Carving With Powertools</title>
      <link>https://www.debashishsahu.com/posts/halloween-special-esp8266-based-speakers-motion-sensing--leds-pumpkin-carving-with-powertools/</link>
      <pubDate>Sun, 18 Oct 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/halloween-special-esp8266-based-speakers-motion-sensing--leds-pumpkin-carving-with-powertools/</guid>
      <description>Using an ESP8266 with PCM5102 to play MP3 files stored in SPIFFs. There is a motion sensor to trigger playback and LEDs for Halloween effects.
GitHub: debsahu/HalloweenESPSpeakers Using an ESP8266 with PCM5102 to play MP3 files stored in SPIFFs. There is a motion sensor to trigger playback and LEDs for Halloween effects.
Wiring [PCM5102 DAC &amp;gt; ESP8266/NODEMCU] VCC &amp;gt; 3.3 3.3V &amp;gt; 3.3 GND &amp;gt; GND FLT &amp;gt; GND DMP &amp;gt; GND SCL &amp;gt; GND BCK &amp;gt; GPIO15/D8 (I2S CLOCK) DIN &amp;gt; GPIO3/RX (I2S DATA) LCK &amp;gt; GPIO2/D4 (L/R CONTROL) FMT &amp;gt; GND XMT &amp;gt; 3.</description>
    </item>
    
    <item>
      <title>ESPHome Dot Matrix Display | Internet Connected Display Home Assistant Display</title>
      <link>https://www.debashishsahu.com/posts/esphome-dot-matrix-display-internet-connected-display-home-assistant-display/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esphome-dot-matrix-display-internet-connected-display-home-assistant-display/</guid>
      <description> Using ESPHome for connecting ESP8266 to MAX7219 Dot-Matrix Display to show useful information from Home Assistant. This is used by my wife&amp;rsquo;s channel Canvasyvibes Art
Software: ESPHome </description>
    </item>
    
    <item>
      <title>DIY Modern Coffee Table | Solid Wood Helix Table</title>
      <link>https://www.debashishsahu.com/posts/diy-modern-coffee-table-solid-wood-helix-table/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/diy-modern-coffee-table-solid-wood-helix-table/</guid>
      <description>My very first wood working project. Please leave a comment on how I can improve on this craft.</description>
    </item>
    
    <item>
      <title>DIY Modern ARIA Vent Upgrade Home Dining Makeover</title>
      <link>https://www.debashishsahu.com/posts/diy-modern-aria-vent-upgrade-home-dining-makeover/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/diy-modern-aria-vent-upgrade-home-dining-makeover/</guid>
      <description>My attempt to upgrade our dining room air register/vent to alleviate our dogs paw getting caught.
Here I use ARIA OG black 4&amp;quot; x 10&amp;quot; vent bought directly from www.ariavent.com</description>
    </item>
    
    <item>
      <title>Machine Learning to Filter Out Background Noise RTX Voice</title>
      <link>https://www.debashishsahu.com/posts/machine-learning-to-filter-out-background-noise-rtx-voice/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/machine-learning-to-filter-out-background-noise-rtx-voice/</guid>
      <description>A demo for RTX voice to filter out background noise. If you have a NVIDIA RTX/GTX GPU, utilize it to filter you background in your favorite work from home app.
RTX Voice: https://www.nvidia.com/en-us/geforce/guides/nvidia-rtx-voice-setup-guide/</description>
    </item>
    
    <item>
      <title>Voice Controlled (Connected) BIDET: A Solution for Non-Availability of Toilet-Paper Caused by COVID19</title>
      <link>https://www.debashishsahu.com/posts/voice-controlled-connected-bidet-a-solution-for-non-availability-of-toilet-paper-caused-by-covid19/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/voice-controlled-connected-bidet-a-solution-for-non-availability-of-toilet-paper-caused-by-covid19/</guid>
      <description> Install of Biobidet Bliss BB200 and connecting it to Home-Assistant.
Wilbur Sargunaraj Software: ESPHome </description>
    </item>
    
    <item>
      <title>Using TensorFlowJS (Machine Learning) for Speech Recognition on ESP8266</title>
      <link>https://www.debashishsahu.com/posts/using-tensorflowjs-machine-learning-for-speech-recognition-on-esp8266/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/using-tensorflowjs-machine-learning-for-speech-recognition-on-esp8266/</guid>
      <description>Use TensorFlowJS via WebAudio API and WebGL GPU acceleration on Browser to recognize &amp;ldquo;keywords&amp;rdquo;. In our case, without retraining &amp;ldquo;UP&amp;rdquo; turns on LED and &amp;ldquo;DOWN&amp;rdquo; turns it off.
FFT on ESP32 GitHub: debsahu/SpeechRecognitionTensorFlowJS Speech Recognition on Browser, AsyncWebServer served on ESP8266 to control LED_BUILTIN/GPIO16 Uses WebAudio API and WebGL GPU acceleration = speech recognition is done on the browser http:// requests for microphone is blocked for chrome, use firefox instead tf.</description>
    </item>
    
    <item>
      <title>ESP32 to Process Audio Signals: Software (Fourier Transforms) and Hardware (MSGEQ7)</title>
      <link>https://www.debashishsahu.com/posts/esp32-to-process-audio-signals-software-fourier-transforms-and-hardware-msgeq7/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp32-to-process-audio-signals-software-fourier-transforms-and-hardware-msgeq7/</guid>
      <description> Here we use ESP32 microcontroller to analyze real-time audio signals
Real-time FFT to get frequencies Use MSGEQ7 chip to get the same data Display frequency bands on LEDs as bars FFT basics: GitHub: debsahu/ESP32_FFT_Audio_LEDs Libraries Needed Software FFT platformio.ini and Hardware FFT platformio.ini is included, use PlatformIO and it will take care of installing the following libraries.
Library Link arduinoFFT https://github.com/kosme/arduinoFFT WS2812FX https://github.com/kitesurfer1404/WS2812FX MD_MSGEQ7 https://github.com/debsahu/MD_MSGEQ7 Known Limitations Sampling frequency must be high Sampling time should not interfere with other WiFi functions FFT calculations are CPU intensive Frequency binning needs to be done manually Wiring </description>
    </item>
    
    <item>
      <title>ESP8266/ESP3232: Home Assistant Switch Connected to PCF8574 Controlling 8 AC Relays</title>
      <link>https://www.debashishsahu.com/posts/esp8266-esp3232-home-assistant-switch-connected-to-pcf8574-controlling-8-ac-relays/</link>
      <pubDate>Sun, 24 Feb 2019 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp8266-esp3232-home-assistant-switch-connected-to-pcf8574-controlling-8-ac-relays/</guid>
      <description>Home Assistant Switch for 8 Relays: PCF8574 can be used to extend the GPIO of ESP8266/32 and here we use 8 ports of PCF8574 to control 8 Relay module
GitHub: debsahu/PCF8574_8Relay Home Assistant Switch for 8 Relays
Code can compile on ESP8266/32 PCF8574 can be used to extend the GPIO of ESP8266/32 8 ports of PCF8574 is connected to 8 Relay module Libraries Needed platformio.ini is included, use PlatformIO and it will take care of installing the following libraries.</description>
    </item>
    
    <item>
      <title>Connect to AWS IoT While Making Masala Chai [ASMR]</title>
      <link>https://www.debashishsahu.com/posts/connect-to-aws-iot-while-making-masala-chai-asmr/</link>
      <pubDate>Mon, 18 Feb 2019 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/connect-to-aws-iot-while-making-masala-chai-asmr/</guid>
      <description>Don&amp;rsquo;t confuse Masala Chai with Chai Latte, no not the same thing! While we make chai during the snowy season, lets connect ESP8266/32 to Amazon&amp;rsquo;s AWS IoT in less than 5 minutes.
AWS IoT Core Instructions Goto AWS IoT Core on your AWS console
Create a Policy Generate a Policy first Create a Policy details
Provide a Name Action: iot:* Resource ARM: * Effect: Allow Create a Thing Create a Thing first Single Thing</description>
    </item>
    
    <item>
      <title>ESP8266/ESP32 Based RGB Light (NeoPixels) Connecting to Google Home &amp; Alexa via ARTIK Cloud</title>
      <link>https://www.debashishsahu.com/posts/esp8266-esp32-based-rgb-light-neopixels-connecting-to-google-home-alexa-via-artik-cloud/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp8266-esp32-based-rgb-light-neopixels-connecting-to-google-home-alexa-via-artik-cloud/</guid>
      <description>⚠️ ⚠️ ⚠️ ARTIK Cloud has been depcreciated by Samsung ⚠️ ⚠️ ⚠️ Here we create an ESP8266/32 based device that emulates a RGB LED light using NeoPixels, which connects to ATRIK cloud. ARTIK cloud connects to smart home assistants like Google Home, Amazon Alexa, etc.
Connecting to Samsung ARTIK Cloud https://my.artik.cloud/
GitHub: debsahu/ARTIKCloud An application made for ESP8266 to comunicate with ARTIK Cloud
Connects to ARTIK Cloud via MQTT SSL port 8883 ARTIK Cloud is connected to all assistant platforms, integration is seamless Compiles on ESP8266-arduino core v2.</description>
    </item>
    
    <item>
      <title>Linux on Windows 10</title>
      <link>https://www.debashishsahu.com/posts/linux-on-windows-10/</link>
      <pubDate>Sat, 26 Jan 2019 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/linux-on-windows-10/</guid>
      <description>Here we attempt to use Linux on Windows.
WSL on Windows: https://aka.ms/wslinstall
Canonical Multipass: https://github.com/CanonicalLtd/multipass</description>
    </item>
    
    <item>
      <title>Control a &#34;Dumb&#34; TV Using a Transistor and ESP8266</title>
      <link>https://www.debashishsahu.com/posts/control-a-dumb-tv-using-a-transistor-and-esp8266/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/control-a-dumb-tv-using-a-transistor-and-esp8266/</guid>
      <description>The goal here is to control a &amp;ldquo;dumb&amp;rdquo; TV using virtual assistants via Home Assistant. We tap into the push button of the TV and use a transistor along with ESP8266 to mimic a button press.
GitHub: debsahu/PegasusTV Goal: Control a &amp;ldquo;dumb&amp;rdquo; TV using virtual assistants via Home Assistant Features: Uses D2 to control 2N2222 transistor Control using Web and MQTT API Completely Async WiFiManager Captive Portal to get WiFi credentials (Compile with -DUSE_EADNS for ESP8266) Connect PIN_CTRL pin to base of 2N2222, collector to Probe and emitter to GND Hardware Software Overview Libraries Needed platformio.</description>
    </item>
    
    <item>
      <title>NeoPixel Painter Draw Using LEDs on Thin Air</title>
      <link>https://www.debashishsahu.com/posts/neopixel-painter-draw-using-leds-on-thin-air/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/neopixel-painter-draw-using-leds-on-thin-air/</guid>
      <description> Exploiting low light photography with long exposure to paint in thin air using NeoPixels LED strips. Here we send real-time data using the E1.31 sACN protocol to a ESP8266 code: https://github.com/debsahu/E131_PixelPusher that displays strips of pictures over time. These bright lights are registered on the sensors of camera yielding out of the world photos! </description>
    </item>
    
    <item>
      <title>E1.31 Pixel Pusher: Sending E1.31 UDP Data to ESP8266 Displayed on NeoPixels</title>
      <link>https://www.debashishsahu.com/posts/e1-31-pixel-pusher-sending-e1-31-udp-data-to-esp8266-displayed-on-neopixels/</link>
      <pubDate>Wed, 19 Dec 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/e1-31-pixel-pusher-sending-e1-31-udp-data-to-esp8266-displayed-on-neopixels/</guid>
      <description>Here we try to push E1.31 UDP data received wirelessly via ESP8266 and pushed to NeoPixel in the fastest way possible.
Other projects with E1.31 support:
GitHub: forkineye/ESPixelStick GitHub: Aircoookie/WLED GitHub: toblum/McLighting I also demonstrate how to setup and use Jinx!, ledfx and xLights
GitHub: debsahu/E131_PixelPusher Minimalistic Async code around Async E131 for ESP8266/ESP32
Completely Async Web-interface to set starting universe, unicast/umulticast, total number of universes WiFiManager Captive Portal to get WiFi credentials (Compile with -DUSE_EADNS for ESP8266) Subscribes to E131 multicast Connect RX/GPIO3 to DIN of NeoPixel strip, and any PIN (&amp;lt;GPIO32) specified for ESP32 Upload included firmware.</description>
    </item>
    
    <item>
      <title>Creating a Home Assistant Web Scraper Sensor</title>
      <link>https://www.debashishsahu.com/posts/creating-a-home-assistant-web-scraper-sensor/</link>
      <pubDate>Sat, 01 Dec 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/creating-a-home-assistant-web-scraper-sensor/</guid>
      <description>Here is a demonstration of using lxml for scraping a website to extract essential HTML data and pass the data as sensor to Home Assistant.
GitHub: debsahu/lxmlWebScraper Here is a demonstration of using lxml for scraping a website to extract essential HTML data and pass the data as sensor to Home Assistant.
Overview Installing lxml If working in virtual environment, install lxml using pip
$ pip3 install lxml If working on python installation installed globally</description>
    </item>
    
    <item>
      <title>ESP8266/ESP32 Connecting to SSL/TLSv1.2 Secured Mosquitto MQTT Broker</title>
      <link>https://www.debashishsahu.com/posts/esp8266-esp32-connecting-to-ssl-tlsv1-2-secured-mosquitto-mqtt-broker/</link>
      <pubDate>Sat, 17 Nov 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp8266-esp32-connecting-to-ssl-tlsv1-2-secured-mosquitto-mqtt-broker/</guid>
      <description>Demonstration on ESP8266 &amp;amp; ESP32 using SSL/TLSv1.2 two-way handshake with secured mosquitto broker. SSL is preferred way of encryption of communication between devices over the internet. Here we secure a mosquitto MQTT broker and connect to it via ESP8266 &amp;amp; ESP32 that do a two-way handshake.
Andreas Spiess on ESP devices &amp;amp; SSL: https://www.youtube.com/watch?v=Wm1xKj4bKsY
GitHub: debsahu/ESP_MQTT_Secure ⚠️ ⚠️ ⚠️ Will not be maintained/updated ⚠️ ⚠️ ⚠️
Demonstration on ESP8266 &amp;amp; ESP32 using SSL/TLSv1.</description>
    </item>
    
    <item>
      <title>Using ESP8266 to Call RESTful API From TheRide to Get Real-Time BUS Data</title>
      <link>https://www.debashishsahu.com/posts/using-esp8266-to-call-restful-api-from-theride-to-get-real-time-bus-data/</link>
      <pubDate>Sat, 27 Oct 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/using-esp8266-to-call-restful-api-from-theride-to-get-real-time-bus-data/</guid>
      <description>Here is a tutorial on how to call RESTful API on ESP8266 and process the data using ArduinoJSON. This data is visually represented in a NeoPixel ring for easy tracking of 3 buses approaching a certain stop. This code also sends MQTT messages with the received data.
debsahu/RESTful-Ride Using ESP8266 to call RESTful API from http://TheRide.org to get real-time BUS data
Features: Easy to read interface Fast and Responsive Portable, i.</description>
    </item>
    
    <item>
      <title>Hacking an Automatic Trash Can to Listen to You</title>
      <link>https://www.debashishsahu.com/posts/hacking-an-automatic-trash-can-to-listen-to-you/</link>
      <pubDate>Mon, 22 Oct 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/hacking-an-automatic-trash-can-to-listen-to-you/</guid>
      <description>Idea To convert an automatic trash can into a smart one.
Hardware Automatic Trash Can Wemos D1 mini (ESP8266) 2N2222 transistor Implementation Here we use an ESP8266 to tap into the pins and emulate a physical button press. The ESP8266 uses a code as described in https://github.com/debsahu/SmartTrashCan to emulate a Wemo Switch, which is detected by Alexa/Echo device as a switch.
GitHub: debsahu/SmartTrashCan Dependencies Library Link Use Wemo Switch Emulator Library https://github.</description>
    </item>
    
    <item>
      <title>Using Gestures to Control Lights on Home-Assistant</title>
      <link>https://www.debashishsahu.com/posts/using-gestures-to-control-lights-on-home-assistant/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/using-gestures-to-control-lights-on-home-assistant/</guid>
      <description> Getting one&amp;rsquo;s hands on APDS9960 is very easy, that can be used to detect hand gestures. Here we use this sensor to control lights on Home Assistant based on a gesture observed on sensor.
Software Libraries used: HARestAPI GitHub: debsahu/HARestAPI APDS9960 GitHub: SteveQuinn1/SparkFun_APDS-9960_Sensor_Arduino_Library SSD1306 OLED I2C GitHub: ThingPulse/esp8266-oled-ssd1306 </description>
    </item>
    
    <item>
      <title>ESP8266 Talking to AWS IoT Using MQTT</title>
      <link>https://www.debashishsahu.com/posts/esp8266-talking-to-aws-iot-using-mqtt/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp8266-talking-to-aws-iot-using-mqtt/</guid>
      <description>Arduino library connecting to the AWS IoT service from an ESP8266 using websockets and MQTT.
GitHub: debsahu/esp8266-arduino-aws-iot-ws ⚠️ ⚠️ ⚠️ This is no longer maintained and obsolete, there is better way to do this: follow instructions from here Still want to use this, follow instructions below ⚠️ ⚠️ ⚠️ Arduino Library derived from joekickass/esp8266-arduino-aws-iot-ws to work with Arduino
Dependencies Library Link Use arduinoWebSockets https://github.com/Links2004/arduinoWebSockets websocket comm impl PahoMQTT https://projects.eclipse.org/projects/technology.paho/downloads mqtt comm impl ArduinoJSON 6.</description>
    </item>
    
    <item>
      <title>ESP8266 Making Google Home Speak</title>
      <link>https://www.debashishsahu.com/posts/esp8266-making-google-home-speak/</link>
      <pubDate>Fri, 06 Jul 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp8266-making-google-home-speak/</guid>
      <description>Using esp8266-google-home-notifier library on ESP8266 to make Google Home speak!
Software Prerequisites/Limitations The GoogleHomeName must match the name of Google Home / mini setup in Google Home App. The ESP8266 must be on the same network as Google Home. MDNS: Dont include ESP8266mDNS.h supplied by Arduino-ESP8266. Internal ESP8266mDNS.h should suffice. Libraries required esp8266-google-home-notifier esp8266-google-tts WiFiManager (optional) GitHub: debsahu/GoogleSay sercret.h
#define SECRETconst char* ssid = &amp;#34;&amp;lt;WiFiSSID&amp;gt;&amp;#34;;const char* password = &amp;#34;&amp;lt;WiFiPassword&amp;gt;&amp;#34;; GoogleSay.</description>
    </item>
    
    <item>
      <title>ESP32 Communicating With Xiaomi Flora Plant Sensor Using BLE</title>
      <link>https://www.debashishsahu.com/posts/esp32-communicating-with-xiaomi-flora-plant-sensor-using-ble/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp32-communicating-with-xiaomi-flora-plant-sensor-using-ble/</guid>
      <description>Using ESP32 to communicate with Xiaomi flora (miflora) plant sensor using BLE and posting the values on MQTT server. I also demonstrate the use of Home Assistant miflora sensor component.
Change ESP32 Partition: https://desire.giesecke.tk/index.php/2018/04/20/change-partition-size-arduino-ide/ Home Assistant miflora sensor: https://www.home-assistant.io/components/sensor.miflora/
GitHub: sidddy/flora Archived code from https://github.com/sidddy/flora below
config.h
// array of different xiaomi flora MAC addresseschar* FLORA_DEVICES[] = {&amp;#34;C4:7C:8D:67:11:11&amp;#34;, &amp;#34;C4:7C:8D:67:22:22&amp;#34;, &amp;#34;C4:7C:8D:67:33:33&amp;#34;};// sleep between to runs in seconds#define SLEEP_DURATION 30 * 60// emergency hibernate countdown in seconds#define EMERGENCY_HIBERNATE 3 * 60// how often should the battery be read - in run count#define BATTERY_INTERVAL 6// how often should a device be retried in a run when something fails#define RETRY 3const char* WIFI_SSID = &amp;#34;ssid&amp;#34;;const char* WIFI_PASSWORD = &amp;#34;password&amp;#34;;// MQTT topic gets defined by &amp;#34;&amp;lt;MQTT_BASE_TOPIC&amp;gt;/&amp;lt;MAC_ADDRESS&amp;gt;/&amp;lt;property&amp;gt;&amp;#34;// where MAC_ADDRESS is one of the values from FLORA_DEVICES array// property is either temperature, moisture, conductivity, light or batteryconst char* MQTT_HOST = &amp;#34;10.</description>
    </item>
    
    <item>
      <title>Resurrecting a GPU Cooling Fan Using a Micro-Processor and PWM</title>
      <link>https://www.debashishsahu.com/posts/resurrecting-a-gpu-cooling-fan-using-a-micro-processor-and-pwm/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/resurrecting-a-gpu-cooling-fan-using-a-micro-processor-and-pwm/</guid>
      <description> Trying to rescue a GPU cooling system containing a 12V 4-wire fan using a PWM signal from ATtiny85 and reading a voltage from ADC from a potentiometer knob. Ultimately building a 4-wire fan controller.
25kHz PWM on ESP8266: https://github.com/esp8266/Arduino/issues/4598
Software </description>
    </item>
    
    <item>
      <title>Building LED String Using Capacitive Dropper</title>
      <link>https://www.debashishsahu.com/posts/building-led-string-using-capacitive-dropper/</link>
      <pubDate>Sun, 10 Jun 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/building-led-string-using-capacitive-dropper/</guid>
      <description> Convert a string of filament lights (X-mas decoration lights) into a LED string of lights.
Inspired from bigclive&amp;rsquo;s project </description>
    </item>
    
    <item>
      <title>The Button: Amazon &#34;Dash&#34; Type Button to Communicate to Home-Assistant</title>
      <link>https://www.debashishsahu.com/posts/the-button-amazon-dash-type-button-to-communicate-to-home-assistant/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/the-button-amazon-dash-type-button-to-communicate-to-home-assistant/</guid>
      <description>An attempt to build a Amazon &amp;ldquo;Dash&amp;rdquo; type button to communicate with Home Assistant, which is a combination of two different projects
GitHub: debsahu/TheButton Things we want to achieve: Low on power consumtion: ESP8266 is OFF when the button is not pressed debsahu/ESP_External_Interrupt Portable: Uses 18650 battery, lasts years Talks to Home Assistant: debsahu/HARestAPI ESP_External_Interrupt GitHub: https://github.com/debsahu/ESP_External_Interrupt
HARestAPI GitHub: https://github.com/debsahu/HARestAPI</description>
    </item>
    
    <item>
      <title>Image Recognition Using Movidius Neural Compute Stick on a RPi0W</title>
      <link>https://www.debashishsahu.com/posts/image-recognition-using-movidius-neural-compute-stick-on-a-rpi0w/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/image-recognition-using-movidius-neural-compute-stick-on-a-rpi0w/</guid>
      <description>Let&amp;rsquo;s build a security camera using Raspberry Pi Zero W and Movidius Neural Compute Stick to recognize a &amp;ldquo;person&amp;rdquo; on the video stream
GitHub: debsahu/PiCamMovidius Set up NCSDK API Install required packages on Pi sudo apt-get install -y libusb-1.0-0-dev libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler libatlas-base-dev git automake byacc lsb-release cmake libgflags-dev libgoogle-glog-dev liblmdb-dev swig3.0 graphviz libxslt-dev libxml2-dev gfortran python3-dev python-pip python3-pip python3-setuptools python3-markdown python3-pillow python3-yaml python3-pygraphviz python3-h5py python3-nose python3-lxml python3-matplotlib python3-numpy python3-protobuf python3-dateutil python3-skimage python3-scipy python3-six python3-networkx python3-tk libboost-python-dev Clone NCSDK cd ~git clone https://github.</description>
    </item>
    
    <item>
      <title>MeshyMcLighting: NeoPixels Lighting Solution Using Mesh Network</title>
      <link>https://www.debashishsahu.com/posts/meshymclighting-neopixels-lighting-solution-using-mesh-network/</link>
      <pubDate>Wed, 16 May 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/meshymclighting-neopixels-lighting-solution-using-mesh-network/</guid>
      <description>Wouldn&amp;rsquo;t be cool for many McLighting (RGB LED lighting using NeoPixels) to talk to each other and synchronize? Here is my naive attempt at this, which requires McLighting to be served as stand-alone web-client.
MeshyMcLighting What is this? Wouldn&amp;rsquo;t be cool for many McLighting to talk to each other and synchronize? Here is my naive attempt at this, which requires McLighting to be served as stand-alone webclient.
Features Uses painlessMesh to create mesh network and broadcasts state to every node Does not need WiFi connection to internet, standalone mode + mesh Web interface is borrowed from &amp;ldquo;WS2812FX esp8266&amp;rdquo; example, completely served on ESP8266 Can do minimal file upload to SPIFFs Completely Async!</description>
    </item>
    
    <item>
      <title>Using RTL-SDR to Read Values From Wireless Electric/Gas/Water Meters</title>
      <link>https://www.debashishsahu.com/posts/using-rtl-sdr-to-read-values-from-wireless-electric-gas-water-meters/</link>
      <pubDate>Sat, 05 May 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/using-rtl-sdr-to-read-values-from-wireless-electric-gas-water-meters/</guid>
      <description>An attempt to use RTL-SDR to read values from wireless electric/gas/water meters and visualize these values on Home Assistant.
Software Based on bemasher/RTLAMR Project: https://github.com/bemasher/rtlamr</description>
    </item>
    
    <item>
      <title>RobinhoodAPI: Live Stock Prices From Robinhood on ESP8266</title>
      <link>https://www.debashishsahu.com/posts/robinhoodapi-live-stock-prices-from-robinhood-on-esp8266/</link>
      <pubDate>Sat, 28 Apr 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/robinhoodapi-live-stock-prices-from-robinhood-on-esp8266/</guid>
      <description>A simple Arduino library that retrieves live stock prices from www.robinhood.com in JSON format and processes it for ESP8266. In one example, we demonstrate a whole bunch of stock prices scrolling through a dot-matrix display.
Github: debsahu/RobinhoodAPI An Arduino library to talk to Robin Hood using non-documented Rest API made for ESP8266. Some unofficial documentaion by @sanko is available at here]
Using the Library Download this GitHub library. In Arduino, Goto Sketch -&amp;gt; Include Library -&amp;gt; Add .</description>
    </item>
    
    <item>
      <title>Stock Prediction on Python Using Machine Learning (NARX)</title>
      <link>https://www.debashishsahu.com/posts/stock-prediction-on-python-using-machine-learning-narx/</link>
      <pubDate>Fri, 20 Apr 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/stock-prediction-on-python-using-machine-learning-narx/</guid>
      <description>This video is a collaboration with my wife who does &amp;ldquo;machine learning on big data&amp;rdquo; for a living. Here is a naive attempt at predicting a particular stock&amp;rsquo;s price and displaying it on a ESP8266. This algorithm is not the best one out there, but what is being shown here is the ability to port it elsewhere and easily integrate these complex models with micro-controllers (ESP8266) and other devices.</description>
    </item>
    
    <item>
      <title>HARestAPI: Control Home Assistant Directly Using ESP8266</title>
      <link>https://www.debashishsahu.com/posts/harestapi-control-home-assistant-directly-using-esp8266/</link>
      <pubDate>Sat, 14 Apr 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/harestapi-control-home-assistant-directly-using-esp8266/</guid>
      <description>Control components on Home Assistant directly from ESP8266. This is an Arduino Library that can be used in various projects without the requirement of setup of a MQTT sensor + automation on HA. This uses RESTful API commands.
Idea Control components on Home Assistant directly from ESP8266. Implementation Develop an Arduino Library that can be used in various projects without the requirement of setup of a MQTT sensor + automation on HA.</description>
    </item>
    
    <item>
      <title>ESP8266 Based Color Sensor Talking to Home Assistant via RestAPI</title>
      <link>https://www.debashishsahu.com/posts/esp8266-based-color-sensor-talking-to-home-assistant-via-restapi/</link>
      <pubDate>Sat, 07 Apr 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp8266-based-color-sensor-talking-to-home-assistant-via-restapi/</guid>
      <description> Did you ever want to use ESP8266 to communicate to Home Assistant directly? Here we use a TCS34725 color sensor to read colors and change a RGB light in Home Assistant to the color observed.
Hardware TCS34725 color sensor SSD 1306 OLED Wemos D1 mini (ESP8266) Software RGB Lights connected to Home Assistant toblum/McLighting Aircoookie/WLED </description>
    </item>
    
    <item>
      <title>Talking to Twitter Using TwitterWebAPI for ESP8266</title>
      <link>https://www.debashishsahu.com/posts/talking-to-twitter-using-twitterwebapi-for-esp8266/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/talking-to-twitter-using-twitterwebapi-for-esp8266/</guid>
      <description>Idea: Use ESP8266 to talk to Twitter Get User Data or Tweet or Search Twitter Display the data on a Dot-Matrix display Implementation I created an Arduino library to talk to Twitter using its Web API made for ESP8266. There are other approaches like using a bearer token arduino-twitter-api, but comes with limitations in terms of not being able to send tweet. This Arduino library TwitterWebAPI can both search/read and post tweets.</description>
    </item>
    
    <item>
      <title>Internet Connected Smoke Alarm</title>
      <link>https://www.debashishsahu.com/posts/internet-connected-smoke-alarm/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/internet-connected-smoke-alarm/</guid>
      <description>Have you wondered how to build a internet connected smoke alarm using ESP8266 and a cheap Kidde RF-SM-DC?
Overall idea is to detect smoke alarm signals and send MQTT message. Home Assistant reads the MQTT message and sends out notifications that can be used to notify your local fire station.
ESP8266 sends a MQTT message until the smoke alarm is beeping.
Software Refer to https://github.com/debsahu/ESP_External_Interrupt to build the ESP8266 part of the internet connected smoke alarm.</description>
    </item>
    
    <item>
      <title>Extreme Power-Save Mode: ESP8266 Powered ON After External Interrupt</title>
      <link>https://www.debashishsahu.com/posts/extreme-power--save-mode-esp8266-powered-on-after-external-interrupt/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/extreme-power--save-mode-esp8266-powered-on-after-external-interrupt/</guid>
      <description>Have you ever wondered how to turn on ESP8266 using external interrupt? Build a battery powered amazon dash button or a 18650 lipo powered door bell using ESP8266 without putting the device in deep sleep? Here is your answer.
Idea Keep ESP8266 on OFF mode as default External 3.3V signal (can be short or long) arrives and turns ON ESP8266 ESP8266 wakes up and keeps itself awake until a task is perfomed Send MQTT data to server Put ESP8266 back to power OFF state Implementation RST pin is always HIGH/3.</description>
    </item>
    
    <item>
      <title>Internet Connected Dog Water Bowl Sensor</title>
      <link>https://www.debashishsahu.com/posts/internet-connected-dog-water-bowl-sensor/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/internet-connected-dog-water-bowl-sensor/</guid>
      <description>Wouldn’t it be nice to know if your dog’s water bowl is empty? Let us build a sensor that measures the water level every 5 minutes. This value is sent to MQTT server and Home Assistant automation takes care of the rest.
This sensor connects to MQTT and Home Assistant. See dogsensor.yaml for adding this to HA. Assumes that one has set up various notification sensors available in HA.</description>
    </item>
    
    <item>
      <title>MOSFET Used as Switch to Control a 12V Fan</title>
      <link>https://www.debashishsahu.com/posts/mosfet-used-as-switch-to-control-a-12v-fan/</link>
      <pubDate>Sun, 12 Mar 2017 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/mosfet-used-as-switch-to-control-a-12v-fan/</guid>
      <description>Lets turn on and off low powered fan running at low (&amp;lt;20V) DC voltages. We shall use a MOSFET to achieve this. Hardware IRLML0030PBF ATTiny85 2-pin 12V Fan Wiring MOSFETs have three terminals Drain (D), Source (S) and Gate (G), where source is connected to ground and the +12V or +5V along with load (Fan) is connected to drain. The MOSFET is on when gate voltage is higher than 1.</description>
    </item>
    
    <item>
      <title>How to Build a 3.3V Voltage Regulator</title>
      <link>https://www.debashishsahu.com/posts/how-to-build-a-3-3v-voltage-regulator/</link>
      <pubDate>Sat, 25 Feb 2017 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/how-to-build-a-3-3v-voltage-regulator/</guid>
      <description> Here are the instructions to wire a stable AMS1117-3.3 voltage regulator properly. This can power an ESP8266 or any 3.3V micro-controller reliably supporting current draws up to 1A.
Hardware AMS 1117-3.3 10 uF Electrolytic Capacitor 104 Ceramic Capacitor Wiring AMS1117-3.3 (right to left) Pin 1: GND Pin 2: Vout Pin 3: Vin Connections 5-12V -&amp;gt; Vin GND -&amp;gt; GND 10 uF Electrolytic Capacitor +ve -&amp;gt; Vout 10 uF Electrolytic Capacitor GND -&amp;gt; GND 104 Ceramic Capacitor +ve -&amp;gt; Vin 104 Ceramic Capacitor GND -&amp;gt; GND </description>
    </item>
    
    <item>
      <title>IoT Dot Matrix Display: Twitter Mentions Using ESP8266 Adafruit.io and IFTTT</title>
      <link>https://www.debashishsahu.com/posts/iot-dot-matrix-display-twitter-mentions-using-esp8266-adafruit-io-and-ifttt/</link>
      <pubDate>Fri, 17 Feb 2017 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/iot-dot-matrix-display-twitter-mentions-using-esp8266-adafruit-io-and-ifttt/</guid>
      <description>Let’s say that you don’t have your smartphone around and someone mentions you on twitter. Wouldn’t it be nice to have a display that automatically reads your twitter mentions and show it on a scrolling display? So let’s build a internet controlled (IoT) dot-matrix display that does this for us using an ESP8266.
The plan to accomplish this is as follows: Someone mentions us on twitter (in my case @debsahu) IF This Then That (IFTTT) tracks these mentions and posts this data on Adafruit.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.debashishsahu.com/linktree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.debashishsahu.com/linktree/</guid>
      <description></description>
    </item>
    
    
    
  </channel>
</rss>
