<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MQTT on Debashish Sahu</title>
    <link>https://www.debashishsahu.com/tags/mqtt/</link>
    <description>Recent content in MQTT on Debashish Sahu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Oct 2020 00:00:00 -0500</lastBuildDate><atom:link href="https://www.debashishsahu.com/tags/mqtt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ESPHome Dot Matrix Display | Internet Connected Display Home Assistant Display</title>
      <link>https://www.debashishsahu.com/posts/esphome-dot-matrix-display-internet-connected-display-home-assistant-display/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esphome-dot-matrix-display-internet-connected-display-home-assistant-display/</guid>
      <description>    Using ESPHome for connecting ESP8266 to MAX7219 Dot-Matrix Display to show useful information from Home Assistant. This is used by my wife&amp;rsquo;s channel Canvasyvibes Art
Software: ESPHome  </description>
    </item>
    
    <item>
      <title>ESP8266/ESP3232: Home Assistant Switch Connected to PCF8574 Controlling 8 AC Relays</title>
      <link>https://www.debashishsahu.com/posts/esp8266-esp3232-home-assistant-switch-connected-to-pcf8574-controlling-8-ac-relays/</link>
      <pubDate>Sun, 24 Feb 2019 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp8266-esp3232-home-assistant-switch-connected-to-pcf8574-controlling-8-ac-relays/</guid>
      <description>Home Assistant Switch for 8 Relays: PCF8574 can be used to extend the GPIO of ESP8266/32 and here we use 8 ports of PCF8574 to control 8 Relay module
GitHub: debsahu/PCF8574_8Relay Home Assistant Switch for 8 Relays
 Code can compile on ESP8266/32 PCF8574 can be used to extend the GPIO of ESP8266/32 8 ports of PCF8574 is connected to 8 Relay module  Libraries Needed platformio.</description>
    </item>
    
    <item>
      <title>Connect to AWS IoT While Making Masala Chai [ASMR]</title>
      <link>https://www.debashishsahu.com/posts/connect-to-aws-iot-while-making-masala-chai-asmr/</link>
      <pubDate>Mon, 18 Feb 2019 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/connect-to-aws-iot-while-making-masala-chai-asmr/</guid>
      <description>Don&amp;rsquo;t confuse Masala Chai with Chai Latte, no not the same thing! While we make chai during the snowy season, lets connect ESP8266/32 to Amazon&amp;rsquo;s AWS IoT in less than 5 minutes.
AWS IoT Core Instructions Goto AWS IoT Core on your AWS console
Create a Policy   Generate a Policy first   Create a Policy details
   Provide a Name Action: iot:* Resource ARM: * Effect: Allow   Create a Thing   Create a Thing first   Single Thing</description>
    </item>
    
    <item>
      <title>ESP8266/ESP32 Based RGB Light (NeoPixels) Connecting to Google Home &amp; Alexa via ARTIK Cloud</title>
      <link>https://www.debashishsahu.com/posts/esp8266-esp32-based-rgb-light-neopixels-connecting-to-google-home-alexa-via-artik-cloud/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp8266-esp32-based-rgb-light-neopixels-connecting-to-google-home-alexa-via-artik-cloud/</guid>
      <description>⚠️ ⚠️ ⚠️ ARTIK Cloud has been depcreciated by Samsung ⚠️ ⚠️ ⚠️ Here we create an ESP8266/32 based device that emulates a RGB LED light using NeoPixels, which connects to ATRIK cloud. ARTIK cloud connects to smart home assistants like Google Home, Amazon Alexa, etc.
Connecting to Samsung ARTIK Cloud https://my.artik.cloud/
GitHub: debsahu/ARTIKCloud An application made for ESP8266 to comunicate with ARTIK Cloud
 Connects to ARTIK Cloud via MQTT SSL port 8883 ARTIK Cloud is connected to all assistant platforms, integration is seamless Compiles on ESP8266-arduino core v2.</description>
    </item>
    
    <item>
      <title>ESP8266/ESP32 Connecting to SSL/TLSv1.2 Secured Mosquitto MQTT Broker</title>
      <link>https://www.debashishsahu.com/posts/esp8266-esp32-connecting-to-ssl-tlsv1-2-secured-mosquitto-mqtt-broker/</link>
      <pubDate>Sat, 17 Nov 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp8266-esp32-connecting-to-ssl-tlsv1-2-secured-mosquitto-mqtt-broker/</guid>
      <description>Demonstration on ESP8266 &amp;amp; ESP32 using SSL/TLSv1.2 two-way handshake with secured mosquitto broker. SSL is preferred way of encryption of communication between devices over the internet. Here we secure a mosquitto MQTT broker and connect to it via ESP8266 &amp;amp; ESP32 that do a two-way handshake.
Andreas Spiess on ESP devices &amp;amp; SSL: https://www.youtube.com/watch?v=Wm1xKj4bKsY
GitHub: debsahu/ESP_MQTT_Secure ⚠️ ⚠️ ⚠️ Will not be maintained/updated ⚠️ ⚠️ ⚠️</description>
    </item>
    
    <item>
      <title>ESP8266 Talking to AWS IoT Using MQTT</title>
      <link>https://www.debashishsahu.com/posts/esp8266-talking-to-aws-iot-using-mqtt/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp8266-talking-to-aws-iot-using-mqtt/</guid>
      <description>Arduino library connecting to the AWS IoT service from an ESP8266 using websockets and MQTT.
GitHub: debsahu/esp8266-arduino-aws-iot-ws ⚠️ ⚠️ ⚠️ This is no longer maintained and obsolete, there is better way to do this: follow instructions from here Still want to use this, follow instructions below ⚠️ ⚠️ ⚠️ Arduino Library derived from joekickass/esp8266-arduino-aws-iot-ws to work with Arduino
Dependencies    Library Link Use     arduinoWebSockets https://github.</description>
    </item>
    
    <item>
      <title>ESP32 Communicating With Xiaomi Flora Plant Sensor Using BLE</title>
      <link>https://www.debashishsahu.com/posts/esp32-communicating-with-xiaomi-flora-plant-sensor-using-ble/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/esp32-communicating-with-xiaomi-flora-plant-sensor-using-ble/</guid>
      <description>Using ESP32 to communicate with Xiaomi flora (miflora) plant sensor using BLE and posting the values on MQTT server. I also demonstrate the use of Home Assistant miflora sensor component.
Change ESP32 Partition: https://desire.giesecke.tk/index.php/2018/04/20/change-partition-size-arduino-ide/ Home Assistant miflora sensor: https://www.home-assistant.io/components/sensor.miflora/
GitHub: sidddy/flora Archived code from https://github.com/sidddy/flora below
config.h
// array of different xiaomi flora MAC addresses char* FLORA_DEVICES[] = { &amp;quot;C4:7C:8D:67:11:11&amp;quot;, &amp;quot;C4:7C:8D:67:22:22&amp;quot;, &amp;quot;C4:7C:8D:67:33:33&amp;quot; }; // sleep between to runs in seconds #define SLEEP_DURATION 30 * 60 // emergency hibernate countdown in seconds #define EMERGENCY_HIBERNATE 3 * 60 // how often should the battery be read - in run count #define BATTERY_INTERVAL 6 // how often should a device be retried in a run when something fails #define RETRY 3 const char* WIFI_SSID = &amp;quot;ssid&amp;quot;; const char* WIFI_PASSWORD = &amp;quot;password&amp;quot;; // MQTT topic gets defined by &amp;quot;&amp;lt;MQTT_BASE_TOPIC&amp;gt;/&amp;lt;MAC_ADDRESS&amp;gt;/&amp;lt;property&amp;gt;&amp;quot; // where MAC_ADDRESS is one of the values from FLORA_DEVICES array // property is either temperature, moisture, conductivity, light or battery const char* MQTT_HOST = &amp;quot;10.</description>
    </item>
    
    <item>
      <title>The Button: Amazon &#34;Dash&#34; Type Button to Communicate to Home-Assistant</title>
      <link>https://www.debashishsahu.com/posts/the-button-amazon-dash-type-button-to-communicate-to-home-assistant/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/the-button-amazon-dash-type-button-to-communicate-to-home-assistant/</guid>
      <description>An attempt to build a Amazon &amp;ldquo;Dash&amp;rdquo; type button to communicate with Home Assistant, which is a combination of two different projects
GitHub: debsahu/TheButton Things we want to achieve:  Low on power consumtion: ESP8266 is OFF when the button is not pressed debsahu/ESP_External_Interrupt Portable: Uses 18650 battery, lasts years Talks to Home Assistant: debsahu/HARestAPI    ESP_External_Interrupt  GitHub: https://github.com/debsahu/ESP_External_Interrupt
  HARestAPI  GitHub: https://github.</description>
    </item>
    
    <item>
      <title>Image Recognition Using Movidius Neural Compute Stick on a RPi0W</title>
      <link>https://www.debashishsahu.com/posts/image-recognition-using-movidius-neural-compute-stick-on-a-rpi0w/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/image-recognition-using-movidius-neural-compute-stick-on-a-rpi0w/</guid>
      <description>Let&amp;rsquo;s build a security camera using Raspberry Pi Zero W and Movidius Neural Compute Stick to recognize a &amp;ldquo;person&amp;rdquo; on the video stream
GitHub: debsahu/PiCamMovidius Set up NCSDK API  Install required packages on Pi  sudo apt-get install -y libusb-1.0-0-dev libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler libatlas-base-dev git automake byacc lsb-release cmake libgflags-dev libgoogle-glog-dev liblmdb-dev swig3.0 graphviz libxslt-dev libxml2-dev gfortran python3-dev python-pip python3-pip python3-setuptools python3-markdown python3-pillow python3-yaml python3-pygraphviz python3-h5py python3-nose python3-lxml python3-matplotlib python3-numpy python3-protobuf python3-dateutil python3-skimage python3-scipy python3-six python3-networkx python3-tk libboost-python-dev  Clone NCSDK  cd ~ git clone https://github.</description>
    </item>
    
    <item>
      <title>MeshyMcLighting: NeoPixels Lighting Solution Using Mesh Network</title>
      <link>https://www.debashishsahu.com/posts/meshymclighting-neopixels-lighting-solution-using-mesh-network/</link>
      <pubDate>Wed, 16 May 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/meshymclighting-neopixels-lighting-solution-using-mesh-network/</guid>
      <description>Wouldn&amp;rsquo;t be cool for many McLighting (RGB LED lighting using NeoPixels) to talk to each other and synchronize? Here is my naive attempt at this, which requires McLighting to be served as stand-alone web-client.
MeshyMcLighting What is this? Wouldn&amp;rsquo;t be cool for many McLighting to talk to each other and synchronize? Here is my naive attempt at this, which requires McLighting to be served as stand-alone webclient.</description>
    </item>
    
    <item>
      <title>Using RTL-SDR to Read Values From Wireless Electric/Gas/Water Meters</title>
      <link>https://www.debashishsahu.com/posts/using-rtl-sdr-to-read-values-from-wireless-electric-gas-water-meters/</link>
      <pubDate>Sat, 05 May 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/using-rtl-sdr-to-read-values-from-wireless-electric-gas-water-meters/</guid>
      <description>    An attempt to use RTL-SDR to read values from wireless electric/gas/water meters and visualize these values on Home Assistant.
Software Based on bemasher/RTLAMR Project: https://github.com/bemasher/rtlamr
 </description>
    </item>
    
    <item>
      <title>Talking to Twitter Using TwitterWebAPI for ESP8266</title>
      <link>https://www.debashishsahu.com/posts/talking-to-twitter-using-twitterwebapi-for-esp8266/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/talking-to-twitter-using-twitterwebapi-for-esp8266/</guid>
      <description>Idea:  Use ESP8266 to talk to Twitter Get User Data or Tweet or Search Twitter Display the data on a Dot-Matrix display  Implementation I created an Arduino library to talk to Twitter using its Web API made for ESP8266. There are other approaches like using a bearer token arduino-twitter-api, but comes with limitations in terms of not being able to send tweet. This Arduino library TwitterWebAPI can both search/read and post tweets.</description>
    </item>
    
    <item>
      <title>Internet Connected Smoke Alarm</title>
      <link>https://www.debashishsahu.com/posts/internet-connected-smoke-alarm/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/internet-connected-smoke-alarm/</guid>
      <description>Have you wondered how to build a internet connected smoke alarm using ESP8266 and a cheap Kidde RF-SM-DC?
Overall idea is to detect smoke alarm signals and send MQTT message. Home Assistant reads the MQTT message and sends out notifications that can be used to notify your local fire station.
ESP8266 sends a MQTT message until the smoke alarm is beeping.
Software Refer to https://github.com/debsahu/ESP_External_Interrupt to build the ESP8266 part of the internet connected smoke alarm.</description>
    </item>
    
    <item>
      <title>Extreme Power-Save Mode: ESP8266 Powered ON After External Interrupt</title>
      <link>https://www.debashishsahu.com/posts/extreme-power-save-mode-esp8266-powered-on-after-external-interrupt/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/extreme-power-save-mode-esp8266-powered-on-after-external-interrupt/</guid>
      <description>Have you ever wondered how to turn on ESP8266 using external interrupt? Build a battery powered amazon dash button or a 18650 lipo powered door bell using ESP8266 without putting the device in deep sleep? Here is your answer.
Idea  Keep ESP8266 on OFF mode as default External 3.3V signal (can be short or long) arrives and turns ON ESP8266 ESP8266 wakes up and keeps itself awake until a task is perfomed Send MQTT data to server Put ESP8266 back to power OFF state  Implementation  RST pin is always HIGH/3.</description>
    </item>
    
    <item>
      <title>Internet Connected Dog Water Bowl Sensor</title>
      <link>https://www.debashishsahu.com/posts/internet-connected-dog-water-bowl-sensor/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/internet-connected-dog-water-bowl-sensor/</guid>
      <description>Wouldn’t it be nice to know if your dog’s water bowl is empty? Let us build a sensor that measures the water level every 5 minutes. This value is sent to MQTT server and Home Assistant automation takes care of the rest.
This sensor connects to MQTT and Home Assistant. See dogsensor.yaml for adding this to HA. Assumes that one has set up various notification sensors available in HA.</description>
    </item>
    
    <item>
      <title>IoT Dot Matrix Display: Twitter Mentions Using ESP8266 Adafruit.io and IFTTT</title>
      <link>https://www.debashishsahu.com/posts/iot-dot-matrix-display-twitter-mentions-using-esp8266-adafruit-io-and-ifttt/</link>
      <pubDate>Fri, 17 Feb 2017 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/iot-dot-matrix-display-twitter-mentions-using-esp8266-adafruit-io-and-ifttt/</guid>
      <description>Let’s say that you don’t have your smartphone around and someone mentions you on twitter. Wouldn’t it be nice to have a display that automatically reads your twitter mentions and show it on a scrolling display? So let’s build a internet controlled (IoT) dot-matrix display that does this for us using an ESP8266.
The plan to accomplish this is as follows:  Someone mentions us on twitter (in my case @debsahu) IF This Then That (IFTTT) tracks these mentions and posts this data on Adafruit.</description>
    </item>
    
  </channel>
</rss>
