<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>MQTT on Debashish Sahu</title>
    <link>https://www.debashishsahu.com/tags/mqtt/</link>
    <description>Recent content in MQTT on Debashish Sahu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 23 Aug 2021 12:00:00 -0400</lastBuildDate>
    <atom:link href="https://www.debashishsahu.com/tags/mqtt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Continuous Radon Sensing Using Airthings Wave</title>
      <link>https://www.debashishsahu.com/posts/continuous-radon-sensing-using-airthings-wave/</link>
      <pubDate>Mon, 23 Aug 2021 12:00:00 -0400</pubDate>
      <guid>https://www.debashishsahu.com/posts/continuous-radon-sensing-using-airthings-wave/</guid>
      <description>&lt;h1&gt;&lt;/h1&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/JayOgSkM7Sg?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1 id=&#34;radon&#34;&gt;Radon&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Radon is everywhere, &lt;a href=&#34;https://radonmap.com/&#34;&gt;see map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Naturally-occurring radioactive gas - &lt;strong&gt;causes lung cancer&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Inert, colorless and odorless&lt;/li&gt;
&lt;li&gt;Naturally in the atmosphere in trace amounts
&lt;ul&gt;
&lt;li&gt;Outdoors: radon disperses rapidly&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Most radon exposure occurs inside homes, schools and workplaces
&lt;ul&gt;
&lt;li&gt;Indoors: Radon gas becomes trapped indoors after it enters buildings through cracks and other holes in the foundation&lt;/li&gt;
&lt;li&gt;Can be controlled and managed with proven, cost-effective techniques&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.airthings.com/resources/radon-levels&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://www.airthings.com/hs-fs/hubfs/Website/Images/Newsletter/Blog/Blog%20body%20images%20compressed%20-illustration/unsplash/Radon%20level%20chart.jpg?width=2300&amp;amp;name=Radon%20level%20chart.jpg&#34; alt=&#34;Radon levels&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ultimate guide to permanent holiday lights using NeoPixels/WS2812B LEDs</title>
      <link>https://www.debashishsahu.com/posts/ultimate-guide-to-permanent-holiday-lights-using-neopixels-ws2812b-leds/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/ultimate-guide-to-permanent-holiday-lights-using-neopixels-ws2812b-leds/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/P3tiunmoQ4w?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Permanent holiday lights hardware and software setup using NeoPixels/WS2812B LEDs&lt;/p&gt;
&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;LEDs: &lt;a href=&#34;https://amzn.to/2Lu4m3P&#34;&gt;https://amzn.to/2Lu4m3P&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aluminum Channels: &lt;a href=&#34;https://amzn.to/2Knajio&#34;&gt;https://amzn.to/2Knajio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;18/2 wire: &lt;a href=&#34;https://amzn.to/348I1zq&#34;&gt;https://amzn.to/348I1zq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;18/3 wire: &lt;a href=&#34;https://amzn.to/37YNCJM&#34;&gt;https://amzn.to/37YNCJM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Control Box: &lt;a href=&#34;https://amzn.to/2KjfakW&#34;&gt;https://amzn.to/2KjfakW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;5v 60A Power Supply: &lt;a href=&#34;https://amzn.to/2KmRHiu&#34;&gt;https://amzn.to/2KmRHiu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;25ft extension cord: &lt;a href=&#34;https://amzn.to/3840RIS&#34;&gt;https://amzn.to/3840RIS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wire nuts: &lt;a href=&#34;https://amzn.to/3oO1Vrb&#34;&gt;https://amzn.to/3oO1Vrb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;BME280(optional): &lt;a href=&#34;https://amzn.to/3p15pHd&#34;&gt;https://amzn.to/3p15pHd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PCB: &lt;a href=&#34;https://github.com/toblum/McLighting/tree/master/documentation/pcb&#34;&gt;https://github.com/toblum/McLighting/tree/master/documentation/pcb&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WELD - &lt;a href=&#34;https://github.com/Aircoookie/WLED&#34;&gt;GitHub: Aircoookie/WLED&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;wled-user-mod-for-bmep-280&#34;&gt;WLED User-mod for BME/P 280:&lt;/h3&gt;

&lt;script src=&#34;https://gist.github.com/debsahu.js?file=037068aef72c5eb5915dfb8a2235cd2a&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Epoxy resin holiday lights/night lamp | DIY resin LED decor | WLED</title>
      <link>https://www.debashishsahu.com/posts/epoxy-resin-holiday-lights-night-lamp-diy-resin-led-decor-wled/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/epoxy-resin-holiday-lights-night-lamp-diy-resin-led-decor-wled/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/to39uU77fuo?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;h2 id=&#34;board-prep&#34;&gt;Board Prep&lt;/h2&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/850Vb0Cw9UA?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;WLED Software: &lt;a href=&#34;https://github.com/Aircoookie/WLED&#34;&gt;GitHub: Aircoookie/WLED&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PCB: &lt;a href=&#34;https://github.com/toblum/McLighting/tree/master/documentation/pcb&#34;&gt;https://github.com/toblum/McLighting/tree/master/documentation/pcb&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP8266 based WLED NeoPixel Lights | Insomnia soldering session | Holiday lights prep</title>
      <link>https://www.debashishsahu.com/posts/esp8266-based-wled-neopixel-lightsinsomnia-soldering-session-holiday-lights-prep/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/esp8266-based-wled-neopixel-lightsinsomnia-soldering-session-holiday-lights-prep/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/850Vb0Cw9UA?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;WLED Software: &lt;a href=&#34;https://github.com/Aircoookie/WLED&#34;&gt;GitHub: Aircoookie/WLED&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PCB: &lt;a href=&#34;https://github.com/toblum/McLighting/tree/master/documentation/pcb&#34;&gt;https://github.com/toblum/McLighting/tree/master/documentation/pcb&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESPHome Dot Matrix Display | Internet Connected Display Home Assistant Display</title>
      <link>https://www.debashishsahu.com/posts/esphome-dot-matrix-display-internet-connected-display-home-assistant-display/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/esphome-dot-matrix-display-internet-connected-display-home-assistant-display/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/MiHc06_ST8s?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Using ESPHome for connecting ESP8266 to MAX7219 Dot-Matrix Display to show useful information from Home Assistant. This is used by my wife&amp;rsquo;s channel &lt;a href=&#34;https://www.youtube.com/c/CanvasyvibesArt&#34;&gt;Canvasyvibes Art&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;software-esphome&#34;&gt;Software: ESPHome&lt;/h2&gt;

&lt;script src=&#34;https://gist.github.com/debsahu.js?file=0ad5e1de664763e84994cc3a4a5d5dc0&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>ESP8266/ESP3232: Home Assistant Switch Connected to PCF8574 Controlling 8 AC Relays</title>
      <link>https://www.debashishsahu.com/posts/esp8266-esp3232-home-assistant-switch-connected-to-pcf8574-controlling-8-ac-relays/</link>
      <pubDate>Sun, 24 Feb 2019 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/esp8266-esp3232-home-assistant-switch-connected-to-pcf8574-controlling-8-ac-relays/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/6CzkeJei5i0?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Home Assistant Switch for 8 Relays: PCF8574 can be used to extend the GPIO of ESP8266/32 and here we use 8 ports of PCF8574 to control 8 Relay module&lt;/p&gt;
&lt;h2 id=&#34;github-debsahupcf8574_&#34;&gt;&lt;a href=&#34;https://github.com/debsahu/PCF8574_8Relay&#34;&gt;GitHub: debsahu/PCF8574_8Relay&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Home Assistant Switch for 8 Relays&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Code can compile on ESP8266/32&lt;/li&gt;
&lt;li&gt;PCF8574 can be used to extend the GPIO of ESP8266/32&lt;/li&gt;
&lt;li&gt;8 ports of PCF8574 is connected to 8 Relay module&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;libraries-needed&#34;&gt;Libraries Needed&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/debsahu/PCF8574_8Relay/blob/master/platformio.ini&#34;&gt;platformio.ini&lt;/a&gt; is included, use &lt;a href=&#34;https://platformio.org/platformio-ide&#34;&gt;PlatformIO&lt;/a&gt; and it will take care of installing the following libraries.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Connect to AWS IoT While Making Masala Chai [ASMR]</title>
      <link>https://www.debashishsahu.com/posts/connect-to-aws-iot-while-making-masala-chai-asmr/</link>
      <pubDate>Mon, 18 Feb 2019 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/connect-to-aws-iot-while-making-masala-chai-asmr/</guid>
      <description>&lt;h1&gt;&lt;/h1&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/OzNlSk7VU68?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;p&gt;Don&amp;rsquo;t confuse Masala Chai with Chai Latte, no not the same thing! While we make chai during the snowy season, lets connect ESP8266/32 to Amazon&amp;rsquo;s AWS IoT in less than 5 minutes.&lt;/p&gt;
&lt;h2 id=&#34;aws-iot-core-instructions&#34;&gt;AWS IoT Core Instructions&lt;/h2&gt;
&lt;p&gt;Goto &lt;a href=&#34;https://console.aws.amazon.com/iot&#34;&gt;AWS IoT Core&lt;/a&gt; on your &lt;a href=&#34;https://console.aws.amazon.com&#34;&gt;AWS console&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-a-policy&#34;&gt;Create a Policy&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generate a &lt;strong&gt;Policy&lt;/strong&gt; first
&lt;img loading=&#34;lazy&#34; src=&#34;https://github.com/debsahu/ESP-MQTT-AWS-IoT-Core/raw/master/doc/1-policy-create.png&#34; alt=&#34;1-policy-create&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP8266/ESP32 Based RGB Light (NeoPixels) Connecting to Google Home &amp; Alexa via ARTIK Cloud</title>
      <link>https://www.debashishsahu.com/posts/esp8266-esp32-based-rgb-light-neopixels-connecting-to-google-home-alexa-via-artik-cloud/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/esp8266-esp32-based-rgb-light-neopixels-connecting-to-google-home-alexa-via-artik-cloud/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/baNO_8L5-RY?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;h1 id=&#34;---artik-cloud-has-been-depcreciated-by-samsung---&#34;&gt;⚠️ ⚠️ ⚠️ ARTIK Cloud has been depcreciated by Samsung ⚠️ ⚠️ ⚠️&lt;/h1&gt;
&lt;p&gt;Here we create an ESP8266/32 based device that emulates a RGB LED light using NeoPixels, which connects to ATRIK cloud. ARTIK cloud connects to smart home assistants like Google Home, Amazon Alexa, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP8266/ESP32 Connecting to SSL/TLSv1.2 Secured Mosquitto MQTT Broker</title>
      <link>https://www.debashishsahu.com/posts/esp8266-esp32-connecting-to-ssl-tlsv1-2-secured-mosquitto-mqtt-broker/</link>
      <pubDate>Sat, 17 Nov 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/esp8266-esp32-connecting-to-ssl-tlsv1-2-secured-mosquitto-mqtt-broker/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/ytQUbyab4es?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Demonstration on ESP8266 &amp;amp; ESP32 using SSL/TLSv1.2 two-way handshake with secured mosquitto broker. SSL is preferred way of encryption of communication between devices over the internet. Here we secure a mosquitto MQTT broker and connect to it via ESP8266 &amp;amp; ESP32 that do a two-way handshake.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP8266 Talking to AWS IoT Using MQTT</title>
      <link>https://www.debashishsahu.com/posts/esp8266-talking-to-aws-iot-using-mqtt/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/esp8266-talking-to-aws-iot-using-mqtt/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/AiCa6E_DBL8?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Arduino library connecting to the AWS IoT service from an ESP8266 using websockets and MQTT.&lt;/p&gt;
&lt;h2 id=&#34;github-debsahuesp8266-arduino-aws-iot-ws&#34;&gt;&lt;a href=&#34;https://github.com/debsahu/esp8266-arduino-aws-iot-ws&#34;&gt;GitHub: debsahu/esp8266-arduino-aws-iot-ws&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;---this-is-no-longer-maintained-and-obsolete-there-is-better-way-to-do-this-follow-instructions-from-here-still-want-to-use-this-follow-instructions-below---&#34;&gt;⚠️ ⚠️ ⚠️ This is no longer maintained and obsolete, there is better way to do this: follow instructions from here Still want to use this, follow instructions below ⚠️ ⚠️ ⚠️&lt;/h3&gt;
&lt;p&gt;Arduino Library derived from &lt;a href=&#34;https://github.com/joekickass/esp8266-arduino-aws-iot-ws&#34;&gt;joekickass/esp8266-arduino-aws-iot-ws&lt;/a&gt; to work with Arduino&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP32 Communicating With Xiaomi Flora Plant Sensor Using BLE</title>
      <link>https://www.debashishsahu.com/posts/esp32-communicating-with-xiaomi-flora-plant-sensor-using-ble/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/esp32-communicating-with-xiaomi-flora-plant-sensor-using-ble/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/M3qr4PVtuCc?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Using ESP32 to communicate with Xiaomi flora (miflora) plant sensor using BLE and posting the values on MQTT server. I also demonstrate the use of Home Assistant miflora sensor component.&lt;/p&gt;
&lt;p&gt;Change ESP32 Partition: &lt;a href=&#34;https://desire.giesecke.tk/index.php/2018/04/20/change-partition-size-arduino-ide/&#34;&gt;https://desire.giesecke.tk/index.php/2018/04/20/change-partition-size-arduino-ide/&lt;/a&gt;
Home Assistant miflora sensor: &lt;a href=&#34;https://www.home-assistant.io/components/sensor.miflora/&#34;&gt;https://www.home-assistant.io/components/sensor.miflora/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;github-sidddyflora&#34;&gt;&lt;a href=&#34;https://github.com/sidddy/flora&#34;&gt;GitHub: sidddy/flora&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Archived code from &lt;a href=&#34;https://github.com/sidddy/flora&#34;&gt;https://github.com/sidddy/flora&lt;/a&gt; below&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;config.h&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// array of different xiaomi flora MAC addresses
char* FLORA_DEVICES[] = {
    &amp;#34;C4:7C:8D:67:11:11&amp;#34;, 
    &amp;#34;C4:7C:8D:67:22:22&amp;#34;, 
    &amp;#34;C4:7C:8D:67:33:33&amp;#34;
};

// sleep between to runs in seconds
#define SLEEP_DURATION 30 * 60
// emergency hibernate countdown in seconds
#define EMERGENCY_HIBERNATE 3 * 60
// how often should the battery be read - in run count
#define BATTERY_INTERVAL 6
// how often should a device be retried in a run when something fails
#define RETRY 3

const char*   WIFI_SSID       = &amp;#34;ssid&amp;#34;;
const char*   WIFI_PASSWORD   = &amp;#34;password&amp;#34;;

// MQTT topic gets defined by &amp;#34;&amp;lt;MQTT_BASE_TOPIC&amp;gt;/&amp;lt;MAC_ADDRESS&amp;gt;/&amp;lt;property&amp;gt;&amp;#34;
// where MAC_ADDRESS is one of the values from FLORA_DEVICES array
// property is either temperature, moisture, conductivity, light or battery

const char*   MQTT_HOST       = &amp;#34;10.10.10.1&amp;#34;;
const int     MQTT_PORT       = 1883;
const char*   MQTT_CLIENTID   = &amp;#34;miflora-client&amp;#34;;
const char*   MQTT_USERNAME   = &amp;#34;username&amp;#34;;
const char*   MQTT_PASSWORD   = &amp;#34;password&amp;#34;;
const String  MQTT_BASE_TOPIC = &amp;#34;flora&amp;#34;; 
const int     MQTT_RETRY_WAIT = 5000;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;flora.ino&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Button: Amazon &#34;Dash&#34; Type Button to Communicate to Home-Assistant</title>
      <link>https://www.debashishsahu.com/posts/the-button-amazon-dash-type-button-to-communicate-to-home-assistant/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/the-button-amazon-dash-type-button-to-communicate-to-home-assistant/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/QOnNf9LtF_8?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;An attempt to build a Amazon &amp;ldquo;Dash&amp;rdquo; type button to communicate with Home Assistant, which is a combination of two different projects&lt;/p&gt;
&lt;h2 id=&#34;github-debsahuthebutton&#34;&gt;&lt;a href=&#34;https://github.com/debsahu/TheButton&#34;&gt;GitHub: debsahu/TheButton&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;things-we-want-to-achieve&#34;&gt;Things we want to achieve:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Low on power consumtion: ESP8266 is &lt;strong&gt;OFF&lt;/strong&gt; when the button is not pressed &lt;a href=&#34;https://github.com/debsahu/ESP_External_Interrupt&#34;&gt;debsahu/ESP_External_Interrupt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Portable: Uses 18650 battery, lasts years&lt;/li&gt;
&lt;li&gt;Talks to Home Assistant: &lt;a href=&#34;https://github.com/debsahu/HARestAPI&#34;&gt;debsahu/HARestAPI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;ESP_External_Interrupt&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;GitHub: &lt;a href=&#34;https://github.com/debsahu/ESP_External_Interrupt&#34;&gt;https://github.com/debsahu/ESP_External_Interrupt&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Image Recognition Using Movidius Neural Compute Stick on a RPi0W</title>
      <link>https://www.debashishsahu.com/posts/image-recognition-using-movidius-neural-compute-stick-on-a-rpi0w/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/image-recognition-using-movidius-neural-compute-stick-on-a-rpi0w/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/1q7SU6tp4Yk?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Let&amp;rsquo;s build a security camera using Raspberry Pi Zero W and Movidius Neural Compute Stick to recognize a &amp;ldquo;person&amp;rdquo; on the video stream&lt;/p&gt;
&lt;h2 id=&#34;github-debsahupicammovidius&#34;&gt;&lt;a href=&#34;https://github.com/debsahu/PiCamMovidius&#34;&gt;GitHub: debsahu/PiCamMovidius&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;set-up-ncsdk-api&#34;&gt;Set up NCSDK API&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install required packages on Pi&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install -y libusb-1.0-0-dev libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler libatlas-base-dev git automake byacc lsb-release cmake libgflags-dev libgoogle-glog-dev liblmdb-dev swig3.0 graphviz libxslt-dev libxml2-dev gfortran python3-dev python-pip python3-pip python3-setuptools python3-markdown python3-pillow python3-yaml python3-pygraphviz python3-h5py python3-nose python3-lxml python3-matplotlib python3-numpy python3-protobuf python3-dateutil python3-skimage python3-scipy python3-six python3-networkx python3-tk libboost-python-dev
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Clone NCSDK&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd ~
git clone https://github.com/movidius/ncsdk
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Compile and install NCSDK’s API framework&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd ~/ncsdk/api/src
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Test installation using sample code from NC App Zoo&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd ~
git clone https://github.com/movidius/ncappzoo
cd ncappzoo/apps/hello_ncs_py
python3 hello_ncs.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output should look something like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>MeshyMcLighting: NeoPixels Lighting Solution Using Mesh Network</title>
      <link>https://www.debashishsahu.com/posts/meshymclighting-neopixels-lighting-solution-using-mesh-network/</link>
      <pubDate>Wed, 16 May 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/meshymclighting-neopixels-lighting-solution-using-mesh-network/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/j_3xK5Vr8rw?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Wouldn&amp;rsquo;t be cool for many McLighting (RGB LED lighting using NeoPixels) to talk to each other and synchronize? Here is my naive attempt at this, which requires McLighting to be served as stand-alone web-client.&lt;/p&gt;
&lt;h2 id=&#34;meshymclighting&#34;&gt;&lt;a href=&#34;https://github.com/toblum/McLighting/tree/experimental/Arduino/MeshyMcLighting&#34;&gt;MeshyMcLighting&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;what-is-this&#34;&gt;What is this?&lt;/h3&gt;
&lt;p&gt;Wouldn&amp;rsquo;t be cool for many McLighting to talk to each other and synchronize? Here is my naive attempt at this, which requires McLighting to be served as stand-alone webclient.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using RTL-SDR to Read Values From Wireless Electric/Gas/Water Meters</title>
      <link>https://www.debashishsahu.com/posts/using-rtl-sdr-to-read-values-from-wireless-electric-gas-water-meters/</link>
      <pubDate>Sat, 05 May 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/using-rtl-sdr-to-read-values-from-wireless-electric-gas-water-meters/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/lkEfJkDTQIQ?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;An attempt to use RTL-SDR to read values from wireless electric/gas/water meters and visualize these values on Home Assistant.&lt;/p&gt;
&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;
&lt;p&gt;Based on bemasher/RTLAMR Project: &lt;a href=&#34;https://github.com/bemasher/rtlamr&#34;&gt;https://github.com/bemasher/rtlamr&lt;/a&gt;&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/debsahu.js?file=ee33914e8dea896ff3956f02970e38b9&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Talking to Twitter Using TwitterWebAPI for ESP8266</title>
      <link>https://www.debashishsahu.com/posts/talking-to-twitter-using-twitterwebapi-for-esp8266/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/talking-to-twitter-using-twitterwebapi-for-esp8266/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/ZDGhFYGj5tc?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;h2 id=&#34;idea&#34;&gt;Idea:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use ESP8266 to talk to Twitter&lt;/li&gt;
&lt;li&gt;Get User Data or Tweet or Search Twitter&lt;/li&gt;
&lt;li&gt;Display the data on a Dot-Matrix display&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;I created an Arduino library to talk to Twitter using its Web API made for ESP8266. There are other approaches like using a bearer token arduino-twitter-api, but comes with limitations in terms of not being able to send tweet. This Arduino library TwitterWebAPI can both search/read and post tweets.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Internet Connected Smoke Alarm</title>
      <link>https://www.debashishsahu.com/posts/internet-connected-smoke-alarm/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/internet-connected-smoke-alarm/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/rgAuyPvZLB4?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Have you wondered how to build a internet connected smoke alarm using ESP8266 and a cheap &lt;a href=&#34;https://amzn.to/2N8SiGn&#34;&gt;Kidde RF-SM-DC&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Overall idea is to detect smoke alarm signals and send MQTT message. Home Assistant reads the MQTT message and sends out notifications that can be used to notify your local fire station.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extreme Power-Save Mode: ESP8266 Powered ON After External Interrupt</title>
      <link>https://www.debashishsahu.com/posts/extreme-power--save-mode-esp8266-powered-on-after-external-interrupt/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/extreme-power--save-mode-esp8266-powered-on-after-external-interrupt/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/pPd362tRx5o?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Have you ever wondered how to turn on ESP8266 using external interrupt? Build a battery powered amazon dash button or a 18650 lipo powered door bell using ESP8266 without putting the device in deep sleep? Here is your answer.&lt;/p&gt;
&lt;h2 id=&#34;idea&#34;&gt;Idea&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Keep ESP8266 on &lt;strong&gt;OFF&lt;/strong&gt; mode as default&lt;/li&gt;
&lt;li&gt;External 3.3V signal (can be short or long) arrives and turns &lt;strong&gt;ON&lt;/strong&gt; ESP8266&lt;/li&gt;
&lt;li&gt;ESP8266 wakes up and keeps itself awake until a task is perfomed&lt;/li&gt;
&lt;li&gt;Send MQTT data to server&lt;/li&gt;
&lt;li&gt;Put ESP8266 back to power &lt;strong&gt;OFF&lt;/strong&gt; state&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;RST pin is always HIGH/3.3V using 10k resistor&lt;/li&gt;
&lt;li&gt;ESP8266 is in &lt;strong&gt;OFF&lt;/strong&gt; state, GPIO0 is low&lt;/li&gt;
&lt;li&gt;3.3V signal arrives externally, GPIO0 and CH_PD are high, turn &lt;strong&gt;ON&lt;/strong&gt; ESP8266&lt;/li&gt;
&lt;li&gt;First thing ESP8266 does is turns GPIO0 to high, which means CH_PD remain high. So ESP8266 remains &lt;strong&gt;ON&lt;/strong&gt; until GPIO0 is high&lt;/li&gt;
&lt;li&gt;GPIO12 is used to read value of external interupt&lt;/li&gt;
&lt;li&gt;If there is 3.3V external interrupt, GPIO is high and a MQTT message is sent as “Signal Received” or “ON” and keep ESP8266 &lt;strong&gt;ON&lt;/strong&gt; until 0V signal is received.&lt;/li&gt;
&lt;li&gt;If there is 0V external interrupt, GPIO0 goes low and MQTT message is sent as “Signal Vanished” or “OFF” and turns &lt;strong&gt;OFF&lt;/strong&gt; ESP8266&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;
&lt;p&gt;This project is built using ideas at &lt;a href=&#34;http://www.esp8266.com/viewtopic.php?f=11&amp;amp;t=4458&#34;&gt;http://www.esp8266.com/viewtopic.php?f=11&amp;t=4458&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Internet Connected Dog Water Bowl Sensor</title>
      <link>https://www.debashishsahu.com/posts/internet-connected-dog-water-bowl-sensor/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/internet-connected-dog-water-bowl-sensor/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/AfrIyBWgfdM?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Wouldn’t it be nice to know if your dog’s water bowl is empty? Let us build a sensor that measures the water level every 5 minutes. This value is sent to MQTT server and Home Assistant automation takes care of the rest.&lt;/p&gt;
&lt;p&gt;This sensor connects to MQTT and Home Assistant. See dogsensor.yaml for adding this to HA. Assumes that one has set up various notification sensors available in HA.&lt;/p&gt;</description>
    </item>
    <item>
      <title>IoT Dot Matrix Display: Twitter Mentions Using ESP8266 Adafruit.io and IFTTT</title>
      <link>https://www.debashishsahu.com/posts/iot-dot-matrix-display-twitter-mentions-using-esp8266-adafruit-io-and-ifttt/</link>
      <pubDate>Fri, 17 Feb 2017 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/iot-dot-matrix-display-twitter-mentions-using-esp8266-adafruit-io-and-ifttt/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/JTxpx9XMpjU?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Let’s say that you don’t have your smartphone around and someone mentions you on twitter. Wouldn’t it be nice to have a display that automatically reads your twitter mentions and show it on a scrolling display? So let’s build a internet controlled (IoT) dot-matrix display that does this for us using an ESP8266.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
