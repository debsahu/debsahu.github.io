<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Smart on Debashish Sahu</title>
    <link>https://www.debashishsahu.com/tags/smart/</link>
    <description>Recent content in Smart on Debashish Sahu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 07 Nov 2021 00:00:00 -0500</lastBuildDate><atom:link href="https://www.debashishsahu.com/tags/smart/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rainbird Irrigation into Home Assistant &amp; Full tutorial on Winterization</title>
      <link>https://www.debashishsahu.com/posts/irrigation-ha-blowout/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/irrigation-ha-blowout/</guid>
      <description>Here I add WiFi LNK module to my ESP-TM2 Rainbird Irrigation System and add the Rainbird integration to Home Assistant. Once completed, I winterize the irrigation system for the coming winter.</description>
    </item>
    
    <item>
      <title>DIY Smart Deck Lights | ESPHome | Home Assistant controlled</title>
      <link>https://www.debashishsahu.com/posts/diy-smart-deck-lights-esphome-home-assistant-controlled/</link>
      <pubDate>Mon, 30 Nov 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/diy-smart-deck-lights-esphome-home-assistant-controlled/</guid>
      <description> Building a Home Assistant controlled ESP32 based controller for deck LED lights via ESPHome.
Software: ESPHome </description>
    </item>
    
    <item>
      <title>DIY Smart Wooden Faux Beam Pendent Lights | ESPHome | Smart Plant Lights | Home Assistant controlled</title>
      <link>https://www.debashishsahu.com/posts/diy-smart-wooden-faux-beam-pendent-lights-esphome-smart-plant-lights-home-assistant-controlled/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/diy-smart-wooden-faux-beam-pendent-lights-esphome-smart-plant-lights-home-assistant-controlled/</guid>
      <description> DIY Faux wood-beam lights mode from cedar fence pickets. Light is controlled by Sonoff Mini.
Pendent Lights: amazon
Software: ESPHome </description>
    </item>
    
    <item>
      <title>Voice Controlled (Connected) BIDET: A Solution for Non-Availability of Toilet-Paper Caused by COVID19</title>
      <link>https://www.debashishsahu.com/posts/voice-controlled-connected-bidet-a-solution-for-non-availability-of-toilet-paper-caused-by-covid19/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/voice-controlled-connected-bidet-a-solution-for-non-availability-of-toilet-paper-caused-by-covid19/</guid>
      <description> Install of Biobidet Bliss BB200 and connecting it to Home-Assistant.
Wilbur Sargunaraj Software: ESPHome </description>
    </item>
    
    <item>
      <title>Control a &#34;Dumb&#34; TV Using a Transistor and ESP8266</title>
      <link>https://www.debashishsahu.com/posts/control-a-dumb-tv-using-a-transistor-and-esp8266/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 -0500</pubDate>
      
      <guid>https://www.debashishsahu.com/posts/control-a-dumb-tv-using-a-transistor-and-esp8266/</guid>
      <description>The goal here is to control a &amp;ldquo;dumb&amp;rdquo; TV using virtual assistants via Home Assistant. We tap into the push button of the TV and use a transistor along with ESP8266 to mimic a button press.
GitHub: debsahu/PegasusTV Goal: Control a &amp;ldquo;dumb&amp;rdquo; TV using virtual assistants via Home Assistant Features: Uses D2 to control 2N2222 transistor Control using Web and MQTT API Completely Async WiFiManager Captive Portal to get WiFi credentials (Compile with -DUSE_EADNS for ESP8266) Connect PIN_CTRL pin to base of 2N2222, collector to Probe and emitter to GND Hardware Software Overview Libraries Needed platformio.</description>
    </item>
    
  </channel>
</rss>
