<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>WiFi on Debashish Sahu</title>
    <link>https://www.debashishsahu.com/tags/wifi/</link>
    <description>Recent content in WiFi on Debashish Sahu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 14 Nov 2021 00:00:00 -0500</lastBuildDate>
    <atom:link href="https://www.debashishsahu.com/tags/wifi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Energy Monitor | Emporia Vue in Home Assistant</title>
      <link>https://www.debashishsahu.com/posts/energy-monitor-emporia-vue-in-home-assistant/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/energy-monitor-emporia-vue-in-home-assistant/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/aXHTe8hQJQM?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Using &lt;a href=&#34;https://www.emporiaenergy.com/how-the-vue-energy-monitor-works&#34;&gt;Emporia Vue&lt;/a&gt; to monitor enegry usage of whole house and several branches in the house.&lt;/p&gt;
&lt;h1 id=&#34;emporia-vue-home-assistant-intergration&#34;&gt;Emporia Vue Home Assistant Intergration&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magico13/ha-emporia-vue&#34;&gt;GitHub: magico13/ha-emporia-vue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Rainbird Irrigation into Home Assistant &amp; Full tutorial on Winterization</title>
      <link>https://www.debashishsahu.com/posts/irrigation-ha-blowout/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/irrigation-ha-blowout/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/neo9MfygHkA?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Here I add &lt;a href=&#34;https://www.rainbird.com/products/lnk-wifi-module&#34;&gt;WiFi LNK module&lt;/a&gt; to my &lt;a href=&#34;https://www.rainbird.com/products/esp-tm2-series-controllers&#34;&gt;ESP-TM2 Rainbird Irrigation System&lt;/a&gt; and add the &lt;a href=&#34;https://www.home-assistant.io/integrations/rainbird/&#34;&gt;Rainbird integration&lt;/a&gt; to &lt;a href=&#34;https://www.home-assistant.io/&#34;&gt;Home Assistant&lt;/a&gt;. Once completed, I winterize the irrigation system for the coming winter.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sending sensor data from ESP32 to InfluxDB | Local access - time-series database</title>
      <link>https://www.debashishsahu.com/posts/sending-sensor-data-from-esp32-to-influxdb-local-access-time-series-database/</link>
      <pubDate>Mon, 15 Mar 2021 10:00:00 -0400</pubDate>
      <guid>https://www.debashishsahu.com/posts/sending-sensor-data-from-esp32-to-influxdb-local-access-time-series-database/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/Jr3KbuwHPgw?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Instead of sending data to services in the cloud, here we send sensor data to local InfluxDB database. Grafana is used to read data from InfluxDB and alert thresholds are set to send reactive alerts.&lt;/p&gt;
&lt;h3 id=&#34;influxdb&#34;&gt;InfluxDB&lt;/h3&gt;
&lt;p&gt;Download and Installation: &lt;a href=&#34;https://portal.influxdata.com/downloads/&#34;&gt;official docs&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;docker&#34;&gt;Docker&lt;/h3&gt;
&lt;p&gt;Download and Installation: &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;official docs&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Connect ESP32 to WPA2-Enterprise WiFi (eduroam: University of Michigan Wireless)</title>
      <link>https://www.debashishsahu.com/posts/connect-esp32-to-wpa2-enterprise-wifi-eduroam-university-of-michigan-wireless/</link>
      <pubDate>Tue, 12 Jan 2021 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/connect-esp32-to-wpa2-enterprise-wifi-eduroam-university-of-michigan-wireless/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/bABHeMea-P0?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Walkthrough of minimal settings for ESP32 to connect to WPA2-Enterprise WiFi at University of Michigan (eduroam)&lt;/p&gt;
&lt;h2 id=&#34;github-debsahuesp32_&#34;&gt;&lt;a href=&#34;https://github.com/debsahu/Esp32_EduWiFi&#34;&gt;GitHub: debsahu/Esp32_EduWiFi&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Minimal settings for ESP32 to connect to &lt;strong&gt;University of Michigan WiFi (MWireless/eduroam)&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;msetup&#34;&gt;MSetup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;a href=&#34;https://msetup.its.umich.edu/&#34;&gt;MSetup&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Log in using University of Michigan credentials&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;strong&gt;Other Device&lt;/strong&gt; and log in again if needed&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESPHome Dot Matrix Display | Internet Connected Display Home Assistant Display</title>
      <link>https://www.debashishsahu.com/posts/esphome-dot-matrix-display-internet-connected-display-home-assistant-display/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/esphome-dot-matrix-display-internet-connected-display-home-assistant-display/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/MiHc06_ST8s?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Using ESPHome for connecting ESP8266 to MAX7219 Dot-Matrix Display to show useful information from Home Assistant. This is used by my wife&amp;rsquo;s channel &lt;a href=&#34;https://www.youtube.com/c/CanvasyvibesArt&#34;&gt;Canvasyvibes Art&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;software-esphome&#34;&gt;Software: ESPHome&lt;/h2&gt;

&lt;script src=&#34;https://gist.github.com/debsahu.js?file=0ad5e1de664763e84994cc3a4a5d5dc0&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Voice Controlled (Connected) BIDET: A Solution for Non-Availability of Toilet-Paper Caused by COVID19</title>
      <link>https://www.debashishsahu.com/posts/voice-controlled-connected-bidet-a-solution-for-non-availability-of-toilet-paper-caused-by-covid19/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/voice-controlled-connected-bidet-a-solution-for-non-availability-of-toilet-paper-caused-by-covid19/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/8E9doeUO8F0?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Install of Biobidet Bliss BB200 and connecting it to Home-Assistant.&lt;/p&gt;
&lt;h2 id=&#34;wilbur-sargunaraj&#34;&gt;Wilbur Sargunaraj&lt;/h2&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/TcDhCFXs-4Q?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h2 id=&#34;software-esphome&#34;&gt;Software: ESPHome&lt;/h2&gt;

&lt;script src=&#34;https://gist.github.com/debsahu.js?file=f11c1bde7fea4f9f51e5e65ce4384a17&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>ESP32 to Process Audio Signals: Software (Fourier Transforms) and Hardware (MSGEQ7)</title>
      <link>https://www.debashishsahu.com/posts/esp32-to-process-audio-signals-software-fourier-transforms-and-hardware-msgeq7/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/esp32-to-process-audio-signals-software-fourier-transforms-and-hardware-msgeq7/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/8YaeUYZ_Ex8?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Here we use ESP32 microcontroller to analyze real-time audio signals&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Real-time FFT to get frequencies&lt;/li&gt;
&lt;li&gt;Use MSGEQ7 chip to get the same data&lt;/li&gt;
&lt;li&gt;Display frequency bands on LEDs as bars&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;fft-basics&#34;&gt;FFT basics:&lt;/h2&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/spUNpyF58BY?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h2 id=&#34;github-debsahuesp32_&#34;&gt;&lt;a href=&#34;https://github.com/debsahu/ESP32_FFT_Audio_LEDs&#34;&gt;GitHub: debsahu/ESP32_FFT_Audio_LEDs&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;libraries-needed&#34;&gt;Libraries Needed&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/debsahu/ESP32_FFT_Audio_LEDs/blob/master/microphone_esp8266_fft/platformio.ini&#34;&gt;Software FFT platformio.ini&lt;/a&gt; and &lt;a href=&#34;https://github.com/debsahu/ESP32_FFT_Audio_LEDs/blob/master/microphone_esp8266_msgeq7/platformio.ini&#34;&gt;Hardware FFT platformio.ini&lt;/a&gt; is included, use &lt;a href=&#34;https://platformio.org/platformio-ide&#34;&gt;PlatformIO&lt;/a&gt; and it will take care of installing the following libraries.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP8266/ESP3232: Home Assistant Switch Connected to PCF8574 Controlling 8 AC Relays</title>
      <link>https://www.debashishsahu.com/posts/esp8266-esp3232-home-assistant-switch-connected-to-pcf8574-controlling-8-ac-relays/</link>
      <pubDate>Sun, 24 Feb 2019 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/esp8266-esp3232-home-assistant-switch-connected-to-pcf8574-controlling-8-ac-relays/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/6CzkeJei5i0?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Home Assistant Switch for 8 Relays: PCF8574 can be used to extend the GPIO of ESP8266/32 and here we use 8 ports of PCF8574 to control 8 Relay module&lt;/p&gt;
&lt;h2 id=&#34;github-debsahupcf8574_&#34;&gt;&lt;a href=&#34;https://github.com/debsahu/PCF8574_8Relay&#34;&gt;GitHub: debsahu/PCF8574_8Relay&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Home Assistant Switch for 8 Relays&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Code can compile on ESP8266/32&lt;/li&gt;
&lt;li&gt;PCF8574 can be used to extend the GPIO of ESP8266/32&lt;/li&gt;
&lt;li&gt;8 ports of PCF8574 is connected to 8 Relay module&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;libraries-needed&#34;&gt;Libraries Needed&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/debsahu/PCF8574_8Relay/blob/master/platformio.ini&#34;&gt;platformio.ini&lt;/a&gt; is included, use &lt;a href=&#34;https://platformio.org/platformio-ide&#34;&gt;PlatformIO&lt;/a&gt; and it will take care of installing the following libraries.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Button: Amazon &#34;Dash&#34; Type Button to Communicate to Home-Assistant</title>
      <link>https://www.debashishsahu.com/posts/the-button-amazon-dash-type-button-to-communicate-to-home-assistant/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/the-button-amazon-dash-type-button-to-communicate-to-home-assistant/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/QOnNf9LtF_8?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;An attempt to build a Amazon &amp;ldquo;Dash&amp;rdquo; type button to communicate with Home Assistant, which is a combination of two different projects&lt;/p&gt;
&lt;h2 id=&#34;github-debsahuthebutton&#34;&gt;&lt;a href=&#34;https://github.com/debsahu/TheButton&#34;&gt;GitHub: debsahu/TheButton&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;things-we-want-to-achieve&#34;&gt;Things we want to achieve:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Low on power consumtion: ESP8266 is &lt;strong&gt;OFF&lt;/strong&gt; when the button is not pressed &lt;a href=&#34;https://github.com/debsahu/ESP_External_Interrupt&#34;&gt;debsahu/ESP_External_Interrupt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Portable: Uses 18650 battery, lasts years&lt;/li&gt;
&lt;li&gt;Talks to Home Assistant: &lt;a href=&#34;https://github.com/debsahu/HARestAPI&#34;&gt;debsahu/HARestAPI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;ESP_External_Interrupt&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;GitHub: &lt;a href=&#34;https://github.com/debsahu/ESP_External_Interrupt&#34;&gt;https://github.com/debsahu/ESP_External_Interrupt&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Talking to Twitter Using TwitterWebAPI for ESP8266</title>
      <link>https://www.debashishsahu.com/posts/talking-to-twitter-using-twitterwebapi-for-esp8266/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/talking-to-twitter-using-twitterwebapi-for-esp8266/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/ZDGhFYGj5tc?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;h2 id=&#34;idea&#34;&gt;Idea:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use ESP8266 to talk to Twitter&lt;/li&gt;
&lt;li&gt;Get User Data or Tweet or Search Twitter&lt;/li&gt;
&lt;li&gt;Display the data on a Dot-Matrix display&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;I created an Arduino library to talk to Twitter using its Web API made for ESP8266. There are other approaches like using a bearer token arduino-twitter-api, but comes with limitations in terms of not being able to send tweet. This Arduino library TwitterWebAPI can both search/read and post tweets.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Internet Connected Smoke Alarm</title>
      <link>https://www.debashishsahu.com/posts/internet-connected-smoke-alarm/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/internet-connected-smoke-alarm/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/rgAuyPvZLB4?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Have you wondered how to build a internet connected smoke alarm using ESP8266 and a cheap &lt;a href=&#34;https://amzn.to/2N8SiGn&#34;&gt;Kidde RF-SM-DC&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Overall idea is to detect smoke alarm signals and send MQTT message. Home Assistant reads the MQTT message and sends out notifications that can be used to notify your local fire station.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extreme Power-Save Mode: ESP8266 Powered ON After External Interrupt</title>
      <link>https://www.debashishsahu.com/posts/extreme-power--save-mode-esp8266-powered-on-after-external-interrupt/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/extreme-power--save-mode-esp8266-powered-on-after-external-interrupt/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/pPd362tRx5o?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Have you ever wondered how to turn on ESP8266 using external interrupt? Build a battery powered amazon dash button or a 18650 lipo powered door bell using ESP8266 without putting the device in deep sleep? Here is your answer.&lt;/p&gt;
&lt;h2 id=&#34;idea&#34;&gt;Idea&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Keep ESP8266 on &lt;strong&gt;OFF&lt;/strong&gt; mode as default&lt;/li&gt;
&lt;li&gt;External 3.3V signal (can be short or long) arrives and turns &lt;strong&gt;ON&lt;/strong&gt; ESP8266&lt;/li&gt;
&lt;li&gt;ESP8266 wakes up and keeps itself awake until a task is perfomed&lt;/li&gt;
&lt;li&gt;Send MQTT data to server&lt;/li&gt;
&lt;li&gt;Put ESP8266 back to power &lt;strong&gt;OFF&lt;/strong&gt; state&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;RST pin is always HIGH/3.3V using 10k resistor&lt;/li&gt;
&lt;li&gt;ESP8266 is in &lt;strong&gt;OFF&lt;/strong&gt; state, GPIO0 is low&lt;/li&gt;
&lt;li&gt;3.3V signal arrives externally, GPIO0 and CH_PD are high, turn &lt;strong&gt;ON&lt;/strong&gt; ESP8266&lt;/li&gt;
&lt;li&gt;First thing ESP8266 does is turns GPIO0 to high, which means CH_PD remain high. So ESP8266 remains &lt;strong&gt;ON&lt;/strong&gt; until GPIO0 is high&lt;/li&gt;
&lt;li&gt;GPIO12 is used to read value of external interupt&lt;/li&gt;
&lt;li&gt;If there is 3.3V external interrupt, GPIO is high and a MQTT message is sent as “Signal Received” or “ON” and keep ESP8266 &lt;strong&gt;ON&lt;/strong&gt; until 0V signal is received.&lt;/li&gt;
&lt;li&gt;If there is 0V external interrupt, GPIO0 goes low and MQTT message is sent as “Signal Vanished” or “OFF” and turns &lt;strong&gt;OFF&lt;/strong&gt; ESP8266&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;
&lt;p&gt;This project is built using ideas at &lt;a href=&#34;http://www.esp8266.com/viewtopic.php?f=11&amp;amp;t=4458&#34;&gt;http://www.esp8266.com/viewtopic.php?f=11&amp;t=4458&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>IoT Dot Matrix Display: Twitter Mentions Using ESP8266 Adafruit.io and IFTTT</title>
      <link>https://www.debashishsahu.com/posts/iot-dot-matrix-display-twitter-mentions-using-esp8266-adafruit-io-and-ifttt/</link>
      <pubDate>Fri, 17 Feb 2017 00:00:00 -0500</pubDate>
      <guid>https://www.debashishsahu.com/posts/iot-dot-matrix-display-twitter-mentions-using-esp8266-adafruit-io-and-ifttt/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/JTxpx9XMpjU?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;Let’s say that you don’t have your smartphone around and someone mentions you on twitter. Wouldn’t it be nice to have a display that automatically reads your twitter mentions and show it on a scrolling display? So let’s build a internet controlled (IoT) dot-matrix display that does this for us using an ESP8266.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
